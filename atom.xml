<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>MT</title>
  
  
  <link href="https://mtianming.top/atom.xml" rel="self"/>
  
  <link href="https://mtianming.top/"/>
  <updated>2021-12-19T23:45:45.783Z</updated>
  <id>https://mtianming.top/</id>
  
  <author>
    <name>Tian Ming</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>高数-上作业答案</title>
    <link href="https://mtianming.top/2021/12/20/%E9%AB%98%E6%95%B0-%E4%B8%8A%E4%BD%9C%E4%B8%9A%E7%AD%94%E6%A1%88/"/>
    <id>https://mtianming.top/2021/12/20/%E9%AB%98%E6%95%B0-%E4%B8%8A%E4%BD%9C%E4%B8%9A%E7%AD%94%E6%A1%88/</id>
    <published>2021-12-19T23:29:42.000Z</published>
    <updated>2021-12-19T23:45:45.783Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2021/12/20/%E9%AB%98%E6%95%B0-%E4%B8%8A%E4%BD%9C%E4%B8%9A%E7%AD%94%E6%A1%88/1.jpg" alt="1"></p><p><img src="/2021/12/20/%E9%AB%98%E6%95%B0-%E4%B8%8A%E4%BD%9C%E4%B8%9A%E7%AD%94%E6%A1%88/2-16399572378021.png" alt="2"></p><p><img src="/2021/12/20/%E9%AB%98%E6%95%B0-%E4%B8%8A%E4%BD%9C%E4%B8%9A%E7%AD%94%E6%A1%88/3.jpg" alt="3"></p><p><img src="/2021/12/20/%E9%AB%98%E6%95%B0-%E4%B8%8A%E4%BD%9C%E4%B8%9A%E7%AD%94%E6%A1%88/4.jpg" alt="4"></p><p><img src="/2021/12/20/%E9%AB%98%E6%95%B0-%E4%B8%8A%E4%BD%9C%E4%B8%9A%E7%AD%94%E6%A1%88/5.jpg" alt="5"></p><p><img src="/2021/12/20/%E9%AB%98%E6%95%B0-%E4%B8%8A%E4%BD%9C%E4%B8%9A%E7%AD%94%E6%A1%88/6.jpg" alt="6"></p><p><img src="/2021/12/20/%E9%AB%98%E6%95%B0-%E4%B8%8A%E4%BD%9C%E4%B8%9A%E7%AD%94%E6%A1%88/7_1.png" alt="7_1"></p><p><img src="/2021/12/20/%E9%AB%98%E6%95%B0-%E4%B8%8A%E4%BD%9C%E4%B8%9A%E7%AD%94%E6%A1%88/8_1.png" alt="8_1"></p><p><img src="/2021/12/20/%E9%AB%98%E6%95%B0-%E4%B8%8A%E4%BD%9C%E4%B8%9A%E7%AD%94%E6%A1%88/9.jpg" alt="9"></p><p><img src="/2021/12/20/%E9%AB%98%E6%95%B0-%E4%B8%8A%E4%BD%9C%E4%B8%9A%E7%AD%94%E6%A1%88/10-16399573034723.jpg" alt="10"></p><p><img src="/2021/12/20/%E9%AB%98%E6%95%B0-%E4%B8%8A%E4%BD%9C%E4%B8%9A%E7%AD%94%E6%A1%88/11.jpg" alt="11"></p><p><img src="/2021/12/20/%E9%AB%98%E6%95%B0-%E4%B8%8A%E4%BD%9C%E4%B8%9A%E7%AD%94%E6%A1%88/12.jpg" alt="12"></p><p><img src="/2021/12/20/%E9%AB%98%E6%95%B0-%E4%B8%8A%E4%BD%9C%E4%B8%9A%E7%AD%94%E6%A1%88/13.jpg" alt="13"></p><p><img src="/2021/12/20/%E9%AB%98%E6%95%B0-%E4%B8%8A%E4%BD%9C%E4%B8%9A%E7%AD%94%E6%A1%88/14.jpg" alt="14"></p><p><img src="/2021/12/20/%E9%AB%98%E6%95%B0-%E4%B8%8A%E4%BD%9C%E4%B8%9A%E7%AD%94%E6%A1%88/15.jpg" alt="15"></p><p><img src="/2021/12/20/%E9%AB%98%E6%95%B0-%E4%B8%8A%E4%BD%9C%E4%B8%9A%E7%AD%94%E6%A1%88/16_1.png" alt="16_1"></p><p><img src="/2021/12/20/%E9%AB%98%E6%95%B0-%E4%B8%8A%E4%BD%9C%E4%B8%9A%E7%AD%94%E6%A1%88/17.jpg" alt="17"></p><p><img src="/2021/12/20/%E9%AB%98%E6%95%B0-%E4%B8%8A%E4%BD%9C%E4%B8%9A%E7%AD%94%E6%A1%88/18.jpg" alt="18"></p><p><img src="/2021/12/20/%E9%AB%98%E6%95%B0-%E4%B8%8A%E4%BD%9C%E4%B8%9A%E7%AD%94%E6%A1%88/19.jpg" alt="19"></p><p><img src="/2021/12/20/%E9%AB%98%E6%95%B0-%E4%B8%8A%E4%BD%9C%E4%B8%9A%E7%AD%94%E6%A1%88/20.jpg" alt="20"></p><p><img src="/2021/12/20/%E9%AB%98%E6%95%B0-%E4%B8%8A%E4%BD%9C%E4%B8%9A%E7%AD%94%E6%A1%88/21.jpg" alt="21"></p><p><img src="/2021/12/20/%E9%AB%98%E6%95%B0-%E4%B8%8A%E4%BD%9C%E4%B8%9A%E7%AD%94%E6%A1%88/22.jpg" alt="22"></p><p><img src="/2021/12/20/%E9%AB%98%E6%95%B0-%E4%B8%8A%E4%BD%9C%E4%B8%9A%E7%AD%94%E6%A1%88/23.jpg" alt="23"></p><p><img src="/2021/12/20/%E9%AB%98%E6%95%B0-%E4%B8%8A%E4%BD%9C%E4%B8%9A%E7%AD%94%E6%A1%88/24.jpg" alt="24"></p><p><img src="/2021/12/20/%E9%AB%98%E6%95%B0-%E4%B8%8A%E4%BD%9C%E4%B8%9A%E7%AD%94%E6%A1%88/25.jpg" alt="25"></p><p><img src="/2021/12/20/%E9%AB%98%E6%95%B0-%E4%B8%8A%E4%BD%9C%E4%B8%9A%E7%AD%94%E6%A1%88/26.jpg" alt="26"></p><p><img src="/2021/12/20/%E9%AB%98%E6%95%B0-%E4%B8%8A%E4%BD%9C%E4%B8%9A%E7%AD%94%E6%A1%88/27.jpg" alt="27"></p><p><img src="/2021/12/20/%E9%AB%98%E6%95%B0-%E4%B8%8A%E4%BD%9C%E4%B8%9A%E7%AD%94%E6%A1%88/28_1.png" alt="28_1"></p><p><img src="/2021/12/20/%E9%AB%98%E6%95%B0-%E4%B8%8A%E4%BD%9C%E4%B8%9A%E7%AD%94%E6%A1%88/29.jpg" alt="29"></p><p><img src="/2021/12/20/%E9%AB%98%E6%95%B0-%E4%B8%8A%E4%BD%9C%E4%B8%9A%E7%AD%94%E6%A1%88/30.jpg" alt="30"></p><p><img src="/2021/12/20/%E9%AB%98%E6%95%B0-%E4%B8%8A%E4%BD%9C%E4%B8%9A%E7%AD%94%E6%A1%88/31.jpg" alt="31"></p><p><img src="/2021/12/20/%E9%AB%98%E6%95%B0-%E4%B8%8A%E4%BD%9C%E4%B8%9A%E7%AD%94%E6%A1%88/32.jpg" alt="32"></p><p><img src="/2021/12/20/%E9%AB%98%E6%95%B0-%E4%B8%8A%E4%BD%9C%E4%B8%9A%E7%AD%94%E6%A1%88/33.jpg" alt="33"></p><p><img src="/2021/12/20/%E9%AB%98%E6%95%B0-%E4%B8%8A%E4%BD%9C%E4%B8%9A%E7%AD%94%E6%A1%88/34.jpg" alt="34"></p><p><img src="/2021/12/20/%E9%AB%98%E6%95%B0-%E4%B8%8A%E4%BD%9C%E4%B8%9A%E7%AD%94%E6%A1%88/35.jpg" alt="35"></p><p><img src="/2021/12/20/%E9%AB%98%E6%95%B0-%E4%B8%8A%E4%BD%9C%E4%B8%9A%E7%AD%94%E6%A1%88/36.jpg" alt="36"></p><p><img src="/2021/12/20/%E9%AB%98%E6%95%B0-%E4%B8%8A%E4%BD%9C%E4%B8%9A%E7%AD%94%E6%A1%88/37.jpg" alt="37"></p><p><img src="/2021/12/20/%E9%AB%98%E6%95%B0-%E4%B8%8A%E4%BD%9C%E4%B8%9A%E7%AD%94%E6%A1%88/38_1-16399574238568.png" alt="38_1"></p><p><img src="/2021/12/20/%E9%AB%98%E6%95%B0-%E4%B8%8A%E4%BD%9C%E4%B8%9A%E7%AD%94%E6%A1%88/39_1-16399574238569.png" alt="39_1"></p><p><img src="/2021/12/20/%E9%AB%98%E6%95%B0-%E4%B8%8A%E4%BD%9C%E4%B8%9A%E7%AD%94%E6%A1%88/40_1-16399574238557.png" alt="40_1"></p><p><img src="/2021/12/20/%E9%AB%98%E6%95%B0-%E4%B8%8A%E4%BD%9C%E4%B8%9A%E7%AD%94%E6%A1%88/41_1-163995742385610.png" alt="41_1"></p><p><img src="/2021/12/20/%E9%AB%98%E6%95%B0-%E4%B8%8A%E4%BD%9C%E4%B8%9A%E7%AD%94%E6%A1%88/42.jpg" alt="42"></p><p><img src="/2021/12/20/%E9%AB%98%E6%95%B0-%E4%B8%8A%E4%BD%9C%E4%B8%9A%E7%AD%94%E6%A1%88/43.jpg" alt="43"></p><p><img src="/2021/12/20/%E9%AB%98%E6%95%B0-%E4%B8%8A%E4%BD%9C%E4%B8%9A%E7%AD%94%E6%A1%88/44.jpg" alt="44"></p><p><img src="/2021/12/20/%E9%AB%98%E6%95%B0-%E4%B8%8A%E4%BD%9C%E4%B8%9A%E7%AD%94%E6%A1%88/45_1.png" alt="45_1"></p><p><img src="/2021/12/20/%E9%AB%98%E6%95%B0-%E4%B8%8A%E4%BD%9C%E4%B8%9A%E7%AD%94%E6%A1%88/46_1.png" alt="46_1"></p><p><img src="/2021/12/20/%E9%AB%98%E6%95%B0-%E4%B8%8A%E4%BD%9C%E4%B8%9A%E7%AD%94%E6%A1%88/47_1.png" alt="47_1"></p><p><img src="/2021/12/20/%E9%AB%98%E6%95%B0-%E4%B8%8A%E4%BD%9C%E4%B8%9A%E7%AD%94%E6%A1%88/48_1.png" alt="48_1"></p><p><img src="/2021/12/20/%E9%AB%98%E6%95%B0-%E4%B8%8A%E4%BD%9C%E4%B8%9A%E7%AD%94%E6%A1%88/49.jpg" alt="49"></p><p><img src="/2021/12/20/%E9%AB%98%E6%95%B0-%E4%B8%8A%E4%BD%9C%E4%B8%9A%E7%AD%94%E6%A1%88/50_1.png" alt="50_1"></p><p><img src="/2021/12/20/%E9%AB%98%E6%95%B0-%E4%B8%8A%E4%BD%9C%E4%B8%9A%E7%AD%94%E6%A1%88/51_1.png" alt="51_1"></p><p><img src="/2021/12/20/%E9%AB%98%E6%95%B0-%E4%B8%8A%E4%BD%9C%E4%B8%9A%E7%AD%94%E6%A1%88/52.jpg" alt="52"></p><p><img src="/2021/12/20/%E9%AB%98%E6%95%B0-%E4%B8%8A%E4%BD%9C%E4%B8%9A%E7%AD%94%E6%A1%88/53.jpg" alt="53"></p><p><img src="/2021/12/20/%E9%AB%98%E6%95%B0-%E4%B8%8A%E4%BD%9C%E4%B8%9A%E7%AD%94%E6%A1%88/54_1.png" alt="54_1"></p><p><img src="/2021/12/20/%E9%AB%98%E6%95%B0-%E4%B8%8A%E4%BD%9C%E4%B8%9A%E7%AD%94%E6%A1%88/55_1.png" alt="55_1"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/2021/12/20/%E9%AB%98%E6%95%B0-%E4%B8%8A%E4%BD%9C%E4%B8%9A%E7%AD%94%E6%A1%88/1.jpg&quot; alt=&quot;1&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2021/12/20/%E9%A</summary>
      
    
    
    
    
    <category term="高等数学" scheme="https://mtianming.top/tags/%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>校初选单片机方向</title>
    <link href="https://mtianming.top/2021/12/18/%E6%A0%A1%E5%88%9D%E9%80%89%E5%8D%95%E7%89%87%E6%9C%BA%E6%96%B9%E5%90%91/"/>
    <id>https://mtianming.top/2021/12/18/%E6%A0%A1%E5%88%9D%E9%80%89%E5%8D%95%E7%89%87%E6%9C%BA%E6%96%B9%E5%90%91/</id>
    <published>2021-12-18T07:53:42.000Z</published>
    <updated>2021-12-19T15:08:17.439Z</updated>
    
    <content type="html"><![CDATA[<h1 id="校初选单片机方向"><a href="#校初选单片机方向" class="headerlink" title="校初选单片机方向"></a>校初选单片机方向</h1><hr><h2 id="往年题目"><a href="#往年题目" class="headerlink" title="往年题目"></a>往年题目</h2><p><img src="/2021/12/18/%E6%A0%A1%E5%88%9D%E9%80%89%E5%8D%95%E7%89%87%E6%9C%BA%E6%96%B9%E5%90%91/image-20211218155447199.png" alt="image-20211218155447199"></p><hr><h2 id="定时器PWM模式"><a href="#定时器PWM模式" class="headerlink" title="定时器PWM模式"></a>定时器PWM模式</h2><p><img src="/2021/12/18/%E6%A0%A1%E5%88%9D%E9%80%89%E5%8D%95%E7%89%87%E6%9C%BA%E6%96%B9%E5%90%91/image-20211218160457047.png" alt="image-20211218160457047"></p><p><img src="/2021/12/18/%E6%A0%A1%E5%88%9D%E9%80%89%E5%8D%95%E7%89%87%E6%9C%BA%E6%96%B9%E5%90%91/image-20211218155635417.png" alt="image-20211218155635417"></p><p>（以下开启的是定时器3，用于PWM输出）</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* USER CODE BEGIN 2 */</span></span><br><span class="line">HAL_TIM_PWM_Start(&amp;htim3,TIM_CHANNEL_1);<span class="comment">//将对应的定时器对应的通道打开，注意注意注意将这</span></span><br><span class="line">句话放在user code begin2后面</span><br><span class="line">TIM3-&gt;PSC=XXX; <span class="comment">//根据自己要的频率计算</span></span><br><span class="line">TIM3-&gt;ARR=XXX; <span class="comment">//根据自己要的频率计算</span></span><br><span class="line">TIM3-&gt;CCR1=XXX; <span class="comment">//ccr加数字对应的就是哪一个通道的ccr，根据自己要的占空比计算</span></span><br></pre></td></tr></table></figure><hr><h2 id="定时器输入捕获模式"><a href="#定时器输入捕获模式" class="headerlink" title="定时器输入捕获模式"></a>定时器输入捕获模式</h2><p>我们要解算所输入信号的频率，占空比等信息</p><p><img src="/2021/12/18/%E6%A0%A1%E5%88%9D%E9%80%89%E5%8D%95%E7%89%87%E6%9C%BA%E6%96%B9%E5%90%91/image-20211218161633534.png" alt="image-20211218161633534"></p><p><img src="/2021/12/18/%E6%A0%A1%E5%88%9D%E9%80%89%E5%8D%95%E7%89%87%E6%9C%BA%E6%96%B9%E5%90%91/image-20211218161729247.png" alt="image-20211218161729247"></p><p><img src="/2021/12/18/%E6%A0%A1%E5%88%9D%E9%80%89%E5%8D%95%E7%89%87%E6%9C%BA%E6%96%B9%E5%90%91/image-20211218161821016.png" alt="image-20211218161821016"></p><p><img src="/2021/12/18/%E6%A0%A1%E5%88%9D%E9%80%89%E5%8D%95%E7%89%87%E6%9C%BA%E6%96%B9%E5%90%91/image-20211218161829357.png" alt="image-20211218161829357"></p><p><img src="/2021/12/18/%E6%A0%A1%E5%88%9D%E9%80%89%E5%8D%95%E7%89%87%E6%9C%BA%E6%96%B9%E5%90%91/image-20211218161835911.png" alt="image-20211218161835911"></p><p>设置全局变量：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Private variables --------------------------*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* USER CODE BEGIN PV */</span></span><br><span class="line"><span class="keyword">float</span> duty;</span><br><span class="line"><span class="keyword">float</span> freq;</span><br><span class="line"><span class="comment">/* USER CODE END PV */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Private function prototypes -----------------*/</span></span><br></pre></td></tr></table></figure><p>开启两个输入捕获中断：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">HAL_TIM_IC_Start_IT(&amp;htim2, TIM_CHANNEL_1);</span><br><span class="line">HAL_TIM_IC_Start_IT(&amp;htim2, TIM_CHANNEL_2);</span><br></pre></td></tr></table></figure><p>中断回调函数：（计算freq &amp; duty）</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">HAL_TIM_IC_CaptureCallback</span><span class="params">(TIM_HandleTypeDef *htim)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (htim-&gt;Instance == TIM2)&#123;</span><br><span class="line"><span class="keyword">if</span> (htim-&gt;Channel == HAL_TIM_ACTIVE_CHANNEL_1)&#123;</span><br><span class="line">freq = <span class="number">84000000.0f</span> / TIM2-&gt;CCR1;</span><br><span class="line">duty = (<span class="keyword">float</span>)TIM2-&gt;CCR2 / TIM2-&gt;CCR1;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="定时器输出比较模式"><a href="#定时器输出比较模式" class="headerlink" title="定时器输出比较模式"></a>定时器输出比较模式</h2><p><strong>比较输出【Compare Output】功能：</strong>定时器通过对预设的<strong>比较值</strong>与<strong>计数器的值</strong>做匹配比较之后，并依据相应的输出模式从而实现各类输出。如PWM输出、电平翻转、单脉冲输出、强制输出等。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;校初选单片机方向&quot;&gt;&lt;a href=&quot;#校初选单片机方向&quot; class=&quot;headerlink&quot; title=&quot;校初选单片机方向&quot;&gt;&lt;/a&gt;校初选单片机方向&lt;/h1&gt;&lt;hr&gt;
&lt;h2 id=&quot;往年题目&quot;&gt;&lt;a href=&quot;#往年题目&quot; class=&quot;headerl</summary>
      
    
    
    
    
    <category term="单片机学习" scheme="https://mtianming.top/tags/%E5%8D%95%E7%89%87%E6%9C%BA%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>悲惨的高数学习生活1</title>
    <link href="https://mtianming.top/2021/12/12/%E6%82%B2%E6%83%A8%E7%9A%84%E9%AB%98%E6%95%B0%E5%AD%A6%E4%B9%A0%E7%94%9F%E6%B4%BB1/"/>
    <id>https://mtianming.top/2021/12/12/%E6%82%B2%E6%83%A8%E7%9A%84%E9%AB%98%E6%95%B0%E5%AD%A6%E4%B9%A0%E7%94%9F%E6%B4%BB1/</id>
    <published>2021-12-12T12:40:08.000Z</published>
    <updated>2021-12-21T08:37:01.239Z</updated>
    
    <content type="html"><![CDATA[<h1 id="高数笔记-1"><a href="#高数笔记-1" class="headerlink" title="高数笔记-1"></a>高数笔记-1</h1><p>悲剧的是，距离期末考试还有不到一个月的时间</p><hr><h2 id="第一章：极限与连续"><a href="#第一章：极限与连续" class="headerlink" title="第一章：极限与连续"></a>第一章：极限与连续</h2><h3 id="1-2数列的极限"><a href="#1-2数列的极限" class="headerlink" title="1.2数列的极限"></a>1.2数列的极限</h3><h4 id="1-数列极限的定义"><a href="#1-数列极限的定义" class="headerlink" title="1.数列极限的定义"></a>1.数列极限的定义</h4><p><img src="/2021/12/12/%E6%82%B2%E6%83%A8%E7%9A%84%E9%AB%98%E6%95%B0%E5%AD%A6%E4%B9%A0%E7%94%9F%E6%B4%BB1/image-20211213135507073.png" alt="image-20211213135507073"></p><p><img src="/2021/12/12/%E6%82%B2%E6%83%A8%E7%9A%84%E9%AB%98%E6%95%B0%E5%AD%A6%E4%B9%A0%E7%94%9F%E6%B4%BB1/image-20211213135855696.png" alt="image-20211213135855696"></p><p>找到N最重要</p><h4 id="2-收敛数列的性质"><a href="#2-收敛数列的性质" class="headerlink" title="2.收敛数列的性质"></a>2.收敛数列的性质</h4><p>收敛数列的极限唯一；</p><p>收敛数列一定有界，但有界不一定收敛；</p><p>收敛数列具有保号性；</p><p><img src="/2021/12/12/%E6%82%B2%E6%83%A8%E7%9A%84%E9%AB%98%E6%95%B0%E5%AD%A6%E4%B9%A0%E7%94%9F%E6%B4%BB1/image-20211213141259509.png" alt="image-20211213141259509"></p><p><img src="/2021/12/12/%E6%82%B2%E6%83%A8%E7%9A%84%E9%AB%98%E6%95%B0%E5%AD%A6%E4%B9%A0%E7%94%9F%E6%B4%BB1/image-20211213141352392.png" alt="image-20211213141352392"></p><p>收敛数列的任一子数列收敛于同一极限；</p><p><img src="/2021/12/12/%E6%82%B2%E6%83%A8%E7%9A%84%E9%AB%98%E6%95%B0%E5%AD%A6%E4%B9%A0%E7%94%9F%E6%B4%BB1/image-20211213141621970.png" alt="image-20211213141621970"></p><h3 id="1-3函数的极限"><a href="#1-3函数的极限" class="headerlink" title="1.3函数的极限"></a>1.3函数的极限</h3><p><img src="/2021/12/12/%E6%82%B2%E6%83%A8%E7%9A%84%E9%AB%98%E6%95%B0%E5%AD%A6%E4%B9%A0%E7%94%9F%E6%B4%BB1/image-20211213142326878.png" alt="image-20211213142326878"></p><p> <img src="/2021/12/12/%E6%82%B2%E6%83%A8%E7%9A%84%E9%AB%98%E6%95%B0%E5%AD%A6%E4%B9%A0%E7%94%9F%E6%B4%BB1/image-20211213142624727.png" alt="image-20211213142624727"></p><p><img src="/2021/12/12/%E6%82%B2%E6%83%A8%E7%9A%84%E9%AB%98%E6%95%B0%E5%AD%A6%E4%B9%A0%E7%94%9F%E6%B4%BB1/image-20211213142907024.png" alt="image-20211213142907024"></p><p><img src="/2021/12/12/%E6%82%B2%E6%83%A8%E7%9A%84%E9%AB%98%E6%95%B0%E5%AD%A6%E4%B9%A0%E7%94%9F%E6%B4%BB1/image-20211213143450934.png" alt="image-20211213143450934"></p><p><img src="/2021/12/12/%E6%82%B2%E6%83%A8%E7%9A%84%E9%AB%98%E6%95%B0%E5%AD%A6%E4%B9%A0%E7%94%9F%E6%B4%BB1/image-20211213143754279.png" alt="image-20211213143754279"></p><h3 id="1-4无穷小量与无穷大量"><a href="#1-4无穷小量与无穷大量" class="headerlink" title="1.4无穷小量与无穷大量"></a>1.4无穷小量与无穷大量</h3><p>  <img src="/2021/12/12/%E6%82%B2%E6%83%A8%E7%9A%84%E9%AB%98%E6%95%B0%E5%AD%A6%E4%B9%A0%E7%94%9F%E6%B4%BB1/image-20211213144840590.png" alt="image-20211213144840590"></p><p><img src="/2021/12/12/%E6%82%B2%E6%83%A8%E7%9A%84%E9%AB%98%E6%95%B0%E5%AD%A6%E4%B9%A0%E7%94%9F%E6%B4%BB1/image-20211213144941554.png" alt="image-20211213144941554"></p><p>（注意0）</p><h3 id="1-5极限运算法则"><a href="#1-5极限运算法则" class="headerlink" title="1.5极限运算法则"></a>1.5极限运算法则</h3><p><img src="/2021/12/12/%E6%82%B2%E6%83%A8%E7%9A%84%E9%AB%98%E6%95%B0%E5%AD%A6%E4%B9%A0%E7%94%9F%E6%B4%BB1/image-20211213145651026.png" alt="image-20211213145651026"></p><p><img src="/2021/12/12/%E6%82%B2%E6%83%A8%E7%9A%84%E9%AB%98%E6%95%B0%E5%AD%A6%E4%B9%A0%E7%94%9F%E6%B4%BB1/image-20211213150223394.png" alt="image-20211213150223394"></p><p>（∞/∞）</p><h3 id="1-6极限存在准则-两个重要极限"><a href="#1-6极限存在准则-两个重要极限" class="headerlink" title="1.6极限存在准则 两个重要极限"></a>1.6极限存在准则 两个重要极限</h3><p><img src="/2021/12/12/%E6%82%B2%E6%83%A8%E7%9A%84%E9%AB%98%E6%95%B0%E5%AD%A6%E4%B9%A0%E7%94%9F%E6%B4%BB1/image-20211213221750008.png" alt="image-20211213221750008"></p><p><img src="/2021/12/12/%E6%82%B2%E6%83%A8%E7%9A%84%E9%AB%98%E6%95%B0%E5%AD%A6%E4%B9%A0%E7%94%9F%E6%B4%BB1/image-20211213222318395.png" alt="image-20211213222318395"></p><p>（1、需要自己构造g(x)和f(x)，因此夹逼定理不太好用；2、放缩；）</p><p><img src="/2021/12/12/%E6%82%B2%E6%83%A8%E7%9A%84%E9%AB%98%E6%95%B0%E5%AD%A6%E4%B9%A0%E7%94%9F%E6%B4%BB1/image-20211213222618055.png" alt="image-20211213222618055"></p><p>（主要是求极限）</p><h3 id="1-7无穷小的比较"><a href="#1-7无穷小的比较" class="headerlink" title="1.7无穷小的比较"></a>1.7无穷小的比较</h3><p>（函数上升的速度）</p><p><img src="/2021/12/12/%E6%82%B2%E6%83%A8%E7%9A%84%E9%AB%98%E6%95%B0%E5%AD%A6%E4%B9%A0%E7%94%9F%E6%B4%BB1/image-20211213223259380.png" alt="image-20211213223259380"></p><p><img src="/2021/12/12/%E6%82%B2%E6%83%A8%E7%9A%84%E9%AB%98%E6%95%B0%E5%AD%A6%E4%B9%A0%E7%94%9F%E6%B4%BB1/image-20211213223313000.png" alt="image-20211213223313000"></p><p><img src="/2021/12/12/%E6%82%B2%E6%83%A8%E7%9A%84%E9%AB%98%E6%95%B0%E5%AD%A6%E4%B9%A0%E7%94%9F%E6%B4%BB1/image-20211213224232848.png" alt="image-20211213224232848"></p><p>（等价无穷小（x-&gt;0）替换）</p><h3 id="1-8函数的连续性与间断点"><a href="#1-8函数的连续性与间断点" class="headerlink" title="1.8函数的连续性与间断点"></a>1.8函数的连续性与间断点</h3><img src="image-20211214185710837.png" alt="image-20211214185710837" style="zoom:50%;" /><p><img src="/2021/12/12/%E6%82%B2%E6%83%A8%E7%9A%84%E9%AB%98%E6%95%B0%E5%AD%A6%E4%B9%A0%E7%94%9F%E6%B4%BB1/image-20211214185821329.png" alt="image-20211214185821329"></p><p>（通过和差化积，使求极限时更为方便）</p><p><img src="/2021/12/12/%E6%82%B2%E6%83%A8%E7%9A%84%E9%AB%98%E6%95%B0%E5%AD%A6%E4%B9%A0%E7%94%9F%E6%B4%BB1/image-20211214190126143.png" alt="image-20211214190126143"></p><p><img src="/2021/12/12/%E6%82%B2%E6%83%A8%E7%9A%84%E9%AB%98%E6%95%B0%E5%AD%A6%E4%B9%A0%E7%94%9F%E6%B4%BB1/image-20211214190252439.png" alt="image-20211214190252439"></p><p><img src="/2021/12/12/%E6%82%B2%E6%83%A8%E7%9A%84%E9%AB%98%E6%95%B0%E5%AD%A6%E4%B9%A0%E7%94%9F%E6%B4%BB1/image-20211214190559257.png" alt="image-20211214190559257"></p><h3 id="1-9闭区间上连续函数的性质"><a href="#1-9闭区间上连续函数的性质" class="headerlink" title="1.9闭区间上连续函数的性质"></a>1.9闭区间上连续函数的性质</h3><p><img src="/2021/12/12/%E6%82%B2%E6%83%A8%E7%9A%84%E9%AB%98%E6%95%B0%E5%AD%A6%E4%B9%A0%E7%94%9F%E6%B4%BB1/image-20211214190813365.png" alt="image-20211214190813365"></p><p>（两个连续的函数）</p><p><img src="/2021/12/12/%E6%82%B2%E6%83%A8%E7%9A%84%E9%AB%98%E6%95%B0%E5%AD%A6%E4%B9%A0%E7%94%9F%E6%B4%BB1/image-20211214191048937.png" alt="image-20211214191048937"></p><img src="image-20211214191107370.png" alt="image-20211214191107370" style="zoom:50%;" /><img src="image-20211214191222318.png" alt="image-20211214191222318" style="zoom:40%;" /><hr><h2 id="第二章：导数与微分"><a href="#第二章：导数与微分" class="headerlink" title="第二章：导数与微分"></a>第二章：导数与微分</h2><h3 id="2-1导数的定义"><a href="#2-1导数的定义" class="headerlink" title="2.1导数的定义"></a>2.1导数的定义</h3><p><img src="/2021/12/12/%E6%82%B2%E6%83%A8%E7%9A%84%E9%AB%98%E6%95%B0%E5%AD%A6%E4%B9%A0%E7%94%9F%E6%B4%BB1/image-20211214191648703.png" alt="image-20211214191648703"></p><img src="image-20211214191729878.png" alt="image-20211214191729878" style="zoom:50%;" /><p>（分段函数）</p><p>求切线方程，先设切点为(x0,y0)，写出切线方程y - 0 = kx（k用所切函数求导后代入得x0表达式表示），最后联立这个式子和所切函数的式子。</p><p><img src="/2021/12/12/%E6%82%B2%E6%83%A8%E7%9A%84%E9%AB%98%E6%95%B0%E5%AD%A6%E4%B9%A0%E7%94%9F%E6%B4%BB1/image-20211214192203865.png" alt="image-20211214192203865"></p><h3 id="2-2求导法则"><a href="#2-2求导法则" class="headerlink" title="2.2求导法则"></a>2.2求导法则</h3><p><img src="/2021/12/12/%E6%82%B2%E6%83%A8%E7%9A%84%E9%AB%98%E6%95%B0%E5%AD%A6%E4%B9%A0%E7%94%9F%E6%B4%BB1/image-20211214192834721.png" alt="image-20211214192834721"></p><p><img src="/2021/12/12/%E6%82%B2%E6%83%A8%E7%9A%84%E9%AB%98%E6%95%B0%E5%AD%A6%E4%B9%A0%E7%94%9F%E6%B4%BB1/image-20211214193610960.png" alt="image-20211214193610960"></p><h3 id="2-3高阶导数及相关变化率"><a href="#2-3高阶导数及相关变化率" class="headerlink" title="2.3高阶导数及相关变化率"></a>2.3高阶导数及相关变化率</h3><img src="image-20211214194003595.png" alt="image-20211214194003595" style="zoom:80%;" /><p><img src="/2021/12/12/%E6%82%B2%E6%83%A8%E7%9A%84%E9%AB%98%E6%95%B0%E5%AD%A6%E4%B9%A0%E7%94%9F%E6%B4%BB1/image-20211214194144351.png" alt="image-20211214194144351"></p><p><img src="/2021/12/12/%E6%82%B2%E6%83%A8%E7%9A%84%E9%AB%98%E6%95%B0%E5%AD%A6%E4%B9%A0%E7%94%9F%E6%B4%BB1/image-20211214195659703.png" alt="image-20211214195659703"></p><p>（二阶参数方程求导）</p><p><img src="/2021/12/12/%E6%82%B2%E6%83%A8%E7%9A%84%E9%AB%98%E6%95%B0%E5%AD%A6%E4%B9%A0%E7%94%9F%E6%B4%BB1/image-20211214195807784.png" alt="image-20211214195807784"></p><p>（n阶求导）</p><h3 id="2-4微分"><a href="#2-4微分" class="headerlink" title="2.4微分"></a>2.4微分</h3><img src="image-20211214195221559.png" alt="image-20211214195221559" style="zoom:80%;" /><hr><h2 id="第三章：微分中值定理与导数的应用"><a href="#第三章：微分中值定理与导数的应用" class="headerlink" title="第三章：微分中值定理与导数的应用"></a>第三章：微分中值定理与导数的应用</h2><h3 id="3-1微分中值定理"><a href="#3-1微分中值定理" class="headerlink" title="3.1微分中值定理"></a>3.1微分中值定理</h3><h4 id="1-1费马引理"><a href="#1-1费马引理" class="headerlink" title="1.1费马引理"></a>1.1费马引理</h4><p><img src="/2021/12/12/%E6%82%B2%E6%83%A8%E7%9A%84%E9%AB%98%E6%95%B0%E5%AD%A6%E4%B9%A0%E7%94%9F%E6%B4%BB1/image-20211215143919527.png" alt="image-20211215143919527"></p><p>导数为零的点叫驻点，不一定是极值点。</p><p><img src="/2021/12/12/%E6%82%B2%E6%83%A8%E7%9A%84%E9%AB%98%E6%95%B0%E5%AD%A6%E4%B9%A0%E7%94%9F%E6%B4%BB1/image-20211213134522935.png" alt="image-20211213134522935"></p><h4 id="1-2罗尔定理"><a href="#1-2罗尔定理" class="headerlink" title="1.2罗尔定理"></a>1.2罗尔定理</h4><p><img src="/2021/12/12/%E6%82%B2%E6%83%A8%E7%9A%84%E9%AB%98%E6%95%B0%E5%AD%A6%E4%B9%A0%E7%94%9F%E6%B4%BB1/image-20211213134536790.png" alt="image-20211213134536790"></p><h4 id="1-3拉格朗日中值定理"><a href="#1-3拉格朗日中值定理" class="headerlink" title="1.3拉格朗日中值定理"></a>1.3拉格朗日中值定理</h4><p><img src="/2021/12/12/%E6%82%B2%E6%83%A8%E7%9A%84%E9%AB%98%E6%95%B0%E5%AD%A6%E4%B9%A0%E7%94%9F%E6%B4%BB1/image-20211213134552847.png" alt="image-20211213134552847"></p><p><img src="/2021/12/12/%E6%82%B2%E6%83%A8%E7%9A%84%E9%AB%98%E6%95%B0%E5%AD%A6%E4%B9%A0%E7%94%9F%E6%B4%BB1/image-20211215144726663.png" alt="image-20211215144726663"></p><h4 id="1-4柯西中值定理"><a href="#1-4柯西中值定理" class="headerlink" title="1.4柯西中值定理"></a>1.4柯西中值定理</h4><p><img src="/2021/12/12/%E6%82%B2%E6%83%A8%E7%9A%84%E9%AB%98%E6%95%B0%E5%AD%A6%E4%B9%A0%E7%94%9F%E6%B4%BB1/image-20211213134623143.png" alt="image-20211213134623143"></p><h3 id="3-2洛必达法则"><a href="#3-2洛必达法则" class="headerlink" title="3.2洛必达法则"></a>3.2洛必达法则</h3><p><img src="/2021/12/12/%E6%82%B2%E6%83%A8%E7%9A%84%E9%AB%98%E6%95%B0%E5%AD%A6%E4%B9%A0%E7%94%9F%E6%B4%BB1/image-20211215145423284.png" alt="image-20211215145423284"></p><p><img src="/2021/12/12/%E6%82%B2%E6%83%A8%E7%9A%84%E9%AB%98%E6%95%B0%E5%AD%A6%E4%B9%A0%E7%94%9F%E6%B4%BB1/image-20211215150150392.png" alt="image-20211215150150392"></p><p>每求完一次检查一次</p><p>Lin(x^n) &lt; x^n &lt; e^x</p><p><img src="/2021/12/12/%E6%82%B2%E6%83%A8%E7%9A%84%E9%AB%98%E6%95%B0%E5%AD%A6%E4%B9%A0%E7%94%9F%E6%B4%BB1/image-20211215150703088.png" alt="image-20211215150703088"></p><p>转化为0/0型</p><p><img src="/2021/12/12/%E6%82%B2%E6%83%A8%E7%9A%84%E9%AB%98%E6%95%B0%E5%AD%A6%E4%B9%A0%E7%94%9F%E6%B4%BB1/image-20211215150926598.png" alt="image-20211215150926598"></p><p>将趋于常数的向外移或者直接先算出来</p><p><img src="/2021/12/12/%E6%82%B2%E6%83%A8%E7%9A%84%E9%AB%98%E6%95%B0%E5%AD%A6%E4%B9%A0%E7%94%9F%E6%B4%BB1/image-20211215151007933.png" alt="image-20211215151007933"></p><h3 id="3-3泰勒公式"><a href="#3-3泰勒公式" class="headerlink" title="3.3泰勒公式"></a>3.3泰勒公式</h3><p><img src="/2021/12/12/%E6%82%B2%E6%83%A8%E7%9A%84%E9%AB%98%E6%95%B0%E5%AD%A6%E4%B9%A0%E7%94%9F%E6%B4%BB1/image-20211213134650077.png" alt="image-20211213134650077"></p><p><img src="/2021/12/12/%E6%82%B2%E6%83%A8%E7%9A%84%E9%AB%98%E6%95%B0%E5%AD%A6%E4%B9%A0%E7%94%9F%E6%B4%BB1/image-20211215151855573.png" alt="image-20211215151855573"></p><p><img src="/2021/12/12/%E6%82%B2%E6%83%A8%E7%9A%84%E9%AB%98%E6%95%B0%E5%AD%A6%E4%B9%A0%E7%94%9F%E6%B4%BB1/image-20211215152006426.png" alt="image-20211215152006426"></p><p>所有等价无穷小都可以用泰勒公式解释，用泰勒公式会更加精确</p><p><img src="/2021/12/12/%E6%82%B2%E6%83%A8%E7%9A%84%E9%AB%98%E6%95%B0%E5%AD%A6%E4%B9%A0%E7%94%9F%E6%B4%BB1/image-20211215152516399.png" alt="image-20211215152516399"></p><p>（常见的马克劳林展开式）</p><p><img src="/2021/12/12/%E6%82%B2%E6%83%A8%E7%9A%84%E9%AB%98%E6%95%B0%E5%AD%A6%E4%B9%A0%E7%94%9F%E6%B4%BB1/image-20211215152651412.png" alt="image-20211215152651412"></p><p><img src="/2021/12/12/%E6%82%B2%E6%83%A8%E7%9A%84%E9%AB%98%E6%95%B0%E5%AD%A6%E4%B9%A0%E7%94%9F%E6%B4%BB1/image-20211215152721628.png" alt="image-20211215152721628"></p><hr><h2 id="第四章：不定积分"><a href="#第四章：不定积分" class="headerlink" title="第四章：不定积分"></a>第四章：不定积分</h2><h3 id="4-1不定积分的概念与性质"><a href="#4-1不定积分的概念与性质" class="headerlink" title="4.1不定积分的概念与性质"></a>4.1不定积分的概念与性质</h3><p><img src="/2021/12/12/%E6%82%B2%E6%83%A8%E7%9A%84%E9%AB%98%E6%95%B0%E5%AD%A6%E4%B9%A0%E7%94%9F%E6%B4%BB1/image-20211215153613442.png" alt="image-20211215153613442"></p><p><img src="/2021/12/12/%E6%82%B2%E6%83%A8%E7%9A%84%E9%AB%98%E6%95%B0%E5%AD%A6%E4%B9%A0%E7%94%9F%E6%B4%BB1/image-20211215153653225.png" alt="image-20211215153653225"></p><p><img src="/2021/12/12/%E6%82%B2%E6%83%A8%E7%9A%84%E9%AB%98%E6%95%B0%E5%AD%A6%E4%B9%A0%E7%94%9F%E6%B4%BB1/image-20211215154051143.png" alt="image-20211215154051143"></p><p><img src="/2021/12/12/%E6%82%B2%E6%83%A8%E7%9A%84%E9%AB%98%E6%95%B0%E5%AD%A6%E4%B9%A0%E7%94%9F%E6%B4%BB1/image-20211215154007950.png" alt="image-20211215154007950"></p><h3 id="4-2换元积分法"><a href="#4-2换元积分法" class="headerlink" title="4.2换元积分法"></a>4.2换元积分法</h3><p>第一类换元法：</p><p><img src="/2021/12/12/%E6%82%B2%E6%83%A8%E7%9A%84%E9%AB%98%E6%95%B0%E5%AD%A6%E4%B9%A0%E7%94%9F%E6%B4%BB1/image-20211215184303320.png" alt="image-20211215184303320"></p><p><img src="/2021/12/12/%E6%82%B2%E6%83%A8%E7%9A%84%E9%AB%98%E6%95%B0%E5%AD%A6%E4%B9%A0%E7%94%9F%E6%B4%BB1/image-20211215184600937.png" alt="image-20211215184600937"></p><p>第二类换元法：</p><p><img src="/2021/12/12/%E6%82%B2%E6%83%A8%E7%9A%84%E9%AB%98%E6%95%B0%E5%AD%A6%E4%B9%A0%E7%94%9F%E6%B4%BB1/image-20211215185046036.png" alt="image-20211215185046036"></p><p><img src="/2021/12/12/%E6%82%B2%E6%83%A8%E7%9A%84%E9%AB%98%E6%95%B0%E5%AD%A6%E4%B9%A0%E7%94%9F%E6%B4%BB1/image-20211215185125835.png" alt="image-20211215185125835"></p><p>（宋浩《高等数学》P42有大量题）</p><h3 id="4-3分部积分法"><a href="#4-3分部积分法" class="headerlink" title="4.3分部积分法"></a>4.3分部积分法</h3><p><img src="/2021/12/12/%E6%82%B2%E6%83%A8%E7%9A%84%E9%AB%98%E6%95%B0%E5%AD%A6%E4%B9%A0%E7%94%9F%E6%B4%BB1/image-20211215185327786.png" alt="image-20211215185327786"></p><p><img src="/2021/12/12/%E6%82%B2%E6%83%A8%E7%9A%84%E9%AB%98%E6%95%B0%E5%AD%A6%E4%B9%A0%E7%94%9F%E6%B4%BB1/image-20211215190119552.png" alt="image-20211215190119552"></p><h3 id="4-4有理函数和可化为有理函数的积分"><a href="#4-4有理函数和可化为有理函数的积分" class="headerlink" title="4.4有理函数和可化为有理函数的积分"></a>4.4有理函数和可化为有理函数的积分</h3><p><img src="/2021/12/12/%E6%82%B2%E6%83%A8%E7%9A%84%E9%AB%98%E6%95%B0%E5%AD%A6%E4%B9%A0%E7%94%9F%E6%B4%BB1/image-20211215190443192.png" alt="image-20211215190443192"></p><p><img src="/2021/12/12/%E6%82%B2%E6%83%A8%E7%9A%84%E9%AB%98%E6%95%B0%E5%AD%A6%E4%B9%A0%E7%94%9F%E6%B4%BB1/image-20211215190644121.png" alt="image-20211215190644121"></p><p><img src="/2021/12/12/%E6%82%B2%E6%83%A8%E7%9A%84%E9%AB%98%E6%95%B0%E5%AD%A6%E4%B9%A0%E7%94%9F%E6%B4%BB1/image-20211215190927459.png" alt="image-20211215190927459"></p><p><img src="/2021/12/12/%E6%82%B2%E6%83%A8%E7%9A%84%E9%AB%98%E6%95%B0%E5%AD%A6%E4%B9%A0%E7%94%9F%E6%B4%BB1/image-20211215191038147.png" alt="image-20211215191038147"></p><p>（待定系数法）</p><p><img src="/2021/12/12/%E6%82%B2%E6%83%A8%E7%9A%84%E9%AB%98%E6%95%B0%E5%AD%A6%E4%B9%A0%E7%94%9F%E6%B4%BB1/image-20211215191154316.png" alt="image-20211215191154316"></p><hr><h2 id="第五章：定积分及其应用"><a href="#第五章：定积分及其应用" class="headerlink" title="第五章：定积分及其应用"></a>第五章：定积分及其应用</h2><h3 id="5-1-定积分的概念"><a href="#5-1-定积分的概念" class="headerlink" title="5.1 定积分的概念"></a>5.1 定积分的概念</h3><p><img src="/2021/12/12/%E6%82%B2%E6%83%A8%E7%9A%84%E9%AB%98%E6%95%B0%E5%AD%A6%E4%B9%A0%E7%94%9F%E6%B4%BB1/image-20211215191319972.png" alt="image-20211215191319972"></p><p><img src="/2021/12/12/%E6%82%B2%E6%83%A8%E7%9A%84%E9%AB%98%E6%95%B0%E5%AD%A6%E4%B9%A0%E7%94%9F%E6%B4%BB1/image-20211215191435503.png" alt="image-20211215191435503"></p><h3 id="5-2定积分的性质"><a href="#5-2定积分的性质" class="headerlink" title="5.2定积分的性质"></a>5.2定积分的性质</h3><p><img src="/2021/12/12/%E6%82%B2%E6%83%A8%E7%9A%84%E9%AB%98%E6%95%B0%E5%AD%A6%E4%B9%A0%E7%94%9F%E6%B4%BB1/image-20211215191602178.png" alt="image-20211215191602178"></p><p><img src="/2021/12/12/%E6%82%B2%E6%83%A8%E7%9A%84%E9%AB%98%E6%95%B0%E5%AD%A6%E4%B9%A0%E7%94%9F%E6%B4%BB1/image-20211215191718117.png" alt="image-20211215191718117"></p><p><img src="/2021/12/12/%E6%82%B2%E6%83%A8%E7%9A%84%E9%AB%98%E6%95%B0%E5%AD%A6%E4%B9%A0%E7%94%9F%E6%B4%BB1/image-20211215191757568-16395670802471.png" alt="image-20211215191757568"></p><p>（估计定积分的范围）</p><p><img src="/2021/12/12/%E6%82%B2%E6%83%A8%E7%9A%84%E9%AB%98%E6%95%B0%E5%AD%A6%E4%B9%A0%E7%94%9F%E6%B4%BB1/image-20211215191930023.png" alt="image-20211215191930023"></p><p>（定积分的中值定理）</p><h3 id="5-3微积分基本定理"><a href="#5-3微积分基本定理" class="headerlink" title="5.3微积分基本定理"></a>5.3微积分基本定理</h3><p><img src="/2021/12/12/%E6%82%B2%E6%83%A8%E7%9A%84%E9%AB%98%E6%95%B0%E5%AD%A6%E4%B9%A0%E7%94%9F%E6%B4%BB1/image-20211216222840523-16396649217871.png" alt="image-20211216222840523"></p><p><img src="/2021/12/12/%E6%82%B2%E6%83%A8%E7%9A%84%E9%AB%98%E6%95%B0%E5%AD%A6%E4%B9%A0%E7%94%9F%E6%B4%BB1/image-20211216222913567.png" alt="image-20211216222913567"></p><h3 id="5-4定积分的换元法与分部积分法"><a href="#5-4定积分的换元法与分部积分法" class="headerlink" title="5.4定积分的换元法与分部积分法"></a>5.4定积分的换元法与分部积分法</h3><p><img src="/2021/12/12/%E6%82%B2%E6%83%A8%E7%9A%84%E9%AB%98%E6%95%B0%E5%AD%A6%E4%B9%A0%E7%94%9F%E6%B4%BB1/image-20211216223207236.png" alt="image-20211216223207236"></p><p><img src="/2021/12/12/%E6%82%B2%E6%83%A8%E7%9A%84%E9%AB%98%E6%95%B0%E5%AD%A6%E4%B9%A0%E7%94%9F%E6%B4%BB1/image-20211216223558866.png" alt="image-20211216223558866"></p><p><img src="/2021/12/12/%E6%82%B2%E6%83%A8%E7%9A%84%E9%AB%98%E6%95%B0%E5%AD%A6%E4%B9%A0%E7%94%9F%E6%B4%BB1/image-20211216223647332.png" alt="image-20211216223647332"></p><p><img src="/2021/12/12/%E6%82%B2%E6%83%A8%E7%9A%84%E9%AB%98%E6%95%B0%E5%AD%A6%E4%B9%A0%E7%94%9F%E6%B4%BB1/image-20211216223722906.png" alt="image-20211216223722906"></p><p><img src="/2021/12/12/%E6%82%B2%E6%83%A8%E7%9A%84%E9%AB%98%E6%95%B0%E5%AD%A6%E4%B9%A0%E7%94%9F%E6%B4%BB1/image-20211216224110352.png" alt="image-20211216224110352"></p><h3 id="5-5广义积分"><a href="#5-5广义积分" class="headerlink" title="5.5广义积分"></a>5.5广义积分</h3><p>无穷限：</p><p><img src="/2021/12/12/%E6%82%B2%E6%83%A8%E7%9A%84%E9%AB%98%E6%95%B0%E5%AD%A6%E4%B9%A0%E7%94%9F%E6%B4%BB1/image-20211216224344144.png" alt="image-20211216224344144"></p><p><img src="/2021/12/12/%E6%82%B2%E6%83%A8%E7%9A%84%E9%AB%98%E6%95%B0%E5%AD%A6%E4%B9%A0%E7%94%9F%E6%B4%BB1/image-20211216224521359.png" alt="image-20211216224521359"></p><p><img src="/2021/12/12/%E6%82%B2%E6%83%A8%E7%9A%84%E9%AB%98%E6%95%B0%E5%AD%A6%E4%B9%A0%E7%94%9F%E6%B4%BB1/image-20211216224733065.png" alt="image-20211216224733065"></p><p>无界函数：</p><p><img src="/2021/12/12/%E6%82%B2%E6%83%A8%E7%9A%84%E9%AB%98%E6%95%B0%E5%AD%A6%E4%B9%A0%E7%94%9F%E6%B4%BB1/image-20211216224844379.png" alt="image-20211216224844379"></p><p><img src="/2021/12/12/%E6%82%B2%E6%83%A8%E7%9A%84%E9%AB%98%E6%95%B0%E5%AD%A6%E4%B9%A0%E7%94%9F%E6%B4%BB1/image-20211216224943292.png" alt="image-20211216224943292"></p><p>瑕积分具有欺骗性：要先是否是瑕积分再算</p><p>伽马函数：</p><p><img src="/2021/12/12/%E6%82%B2%E6%83%A8%E7%9A%84%E9%AB%98%E6%95%B0%E5%AD%A6%E4%B9%A0%E7%94%9F%E6%B4%BB1/image-20211216225248656.png" alt="image-20211216225248656"></p><p><img src="/2021/12/12/%E6%82%B2%E6%83%A8%E7%9A%84%E9%AB%98%E6%95%B0%E5%AD%A6%E4%B9%A0%E7%94%9F%E6%B4%BB1/image-20211216225416041.png" alt="image-20211216225416041"></p><h3 id="5-6定积分的几何应用"><a href="#5-6定积分的几何应用" class="headerlink" title="5.6定积分的几何应用"></a>5.6定积分的几何应用</h3><h3 id="5-7定积分的物理应用"><a href="#5-7定积分的物理应用" class="headerlink" title="5.7定积分的物理应用"></a>5.7定积分的物理应用</h3><hr><h2 id="第六章：常微分方程"><a href="#第六章：常微分方程" class="headerlink" title="第六章：常微分方程"></a>第六章：常微分方程</h2><h3 id="6-1微分方程的基本概念"><a href="#6-1微分方程的基本概念" class="headerlink" title="6.1微分方程的基本概念"></a>6.1微分方程的基本概念</h3><p><img src="/2021/12/12/%E6%82%B2%E6%83%A8%E7%9A%84%E9%AB%98%E6%95%B0%E5%AD%A6%E4%B9%A0%E7%94%9F%E6%B4%BB1/image-20211217141535350.png" alt="image-20211217141535350"></p><h3 id="6-2一阶微分方程"><a href="#6-2一阶微分方程" class="headerlink" title="6.2一阶微分方程"></a>6.2一阶微分方程</h3><p><img src="/2021/12/12/%E6%82%B2%E6%83%A8%E7%9A%84%E9%AB%98%E6%95%B0%E5%AD%A6%E4%B9%A0%E7%94%9F%E6%B4%BB1/image-20211217141622583.png" alt="image-20211217141622583"></p><p><img src="/2021/12/12/%E6%82%B2%E6%83%A8%E7%9A%84%E9%AB%98%E6%95%B0%E5%AD%A6%E4%B9%A0%E7%94%9F%E6%B4%BB1/image-20211217141705409.png" alt="image-20211217141705409"></p><p><img src="/2021/12/12/%E6%82%B2%E6%83%A8%E7%9A%84%E9%AB%98%E6%95%B0%E5%AD%A6%E4%B9%A0%E7%94%9F%E6%B4%BB1/image-20211217141828327.png" alt="image-20211217141828327"></p><p><img src="/2021/12/12/%E6%82%B2%E6%83%A8%E7%9A%84%E9%AB%98%E6%95%B0%E5%AD%A6%E4%B9%A0%E7%94%9F%E6%B4%BB1/image-20211217142049347.png" alt="image-20211217142049347"></p><p><img src="/2021/12/12/%E6%82%B2%E6%83%A8%E7%9A%84%E9%AB%98%E6%95%B0%E5%AD%A6%E4%B9%A0%E7%94%9F%E6%B4%BB1/image-20211217142357811-16397222388031.png" alt="image-20211217142357811-16397222388031"></p><p><img src="/2021/12/12/%E6%82%B2%E6%83%A8%E7%9A%84%E9%AB%98%E6%95%B0%E5%AD%A6%E4%B9%A0%E7%94%9F%E6%B4%BB1/image-20211217143357629.png" alt="image-20211217143357629"></p><p><img src="/2021/12/12/%E6%82%B2%E6%83%A8%E7%9A%84%E9%AB%98%E6%95%B0%E5%AD%A6%E4%B9%A0%E7%94%9F%E6%B4%BB1/image-20211217144312565.png" alt="image-20211217144312565"></p><p><img src="/2021/12/12/%E6%82%B2%E6%83%A8%E7%9A%84%E9%AB%98%E6%95%B0%E5%AD%A6%E4%B9%A0%E7%94%9F%E6%B4%BB1/image-20211217144500146.png" alt="image-20211217144500146"></p><p><img src="/2021/12/12/%E6%82%B2%E6%83%A8%E7%9A%84%E9%AB%98%E6%95%B0%E5%AD%A6%E4%B9%A0%E7%94%9F%E6%B4%BB1/image-20211217144715816.png" alt="image-20211217144715816"></p><p><img src="/2021/12/12/%E6%82%B2%E6%83%A8%E7%9A%84%E9%AB%98%E6%95%B0%E5%AD%A6%E4%B9%A0%E7%94%9F%E6%B4%BB1/image-20211217144811789.png" alt="image-20211217144811789"></p><h3 id="6-3高阶线性微分方程"><a href="#6-3高阶线性微分方程" class="headerlink" title="6.3高阶线性微分方程"></a>6.3高阶线性微分方程</h3><p><img src="/2021/12/12/%E6%82%B2%E6%83%A8%E7%9A%84%E9%AB%98%E6%95%B0%E5%AD%A6%E4%B9%A0%E7%94%9F%E6%B4%BB1/image-20211217145011336.png" alt="image-20211217145011336"></p><p><img src="/2021/12/12/%E6%82%B2%E6%83%A8%E7%9A%84%E9%AB%98%E6%95%B0%E5%AD%A6%E4%B9%A0%E7%94%9F%E6%B4%BB1/image-20211217145155813-16397239175522.png" alt="image-20211217145155813-16397239175522"></p><p><img src="/2021/12/12/%E6%82%B2%E6%83%A8%E7%9A%84%E9%AB%98%E6%95%B0%E5%AD%A6%E4%B9%A0%E7%94%9F%E6%B4%BB1/image-20211217145549991.png" alt="image-20211217145549991"></p><p><img src="/2021/12/12/%E6%82%B2%E6%83%A8%E7%9A%84%E9%AB%98%E6%95%B0%E5%AD%A6%E4%B9%A0%E7%94%9F%E6%B4%BB1/image-20211217150015779.png" alt="image-20211217150015779"></p><p><img src="/2021/12/12/%E6%82%B2%E6%83%A8%E7%9A%84%E9%AB%98%E6%95%B0%E5%AD%A6%E4%B9%A0%E7%94%9F%E6%B4%BB1/image-20211217150105084.png" alt="image-20211217150105084"></p><h3 id="6-4微分方程的应用"><a href="#6-4微分方程的应用" class="headerlink" title="6.4微分方程的应用"></a>6.4微分方程的应用</h3><hr><p>（未完待续…）</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;高数笔记-1&quot;&gt;&lt;a href=&quot;#高数笔记-1&quot; class=&quot;headerlink&quot; title=&quot;高数笔记-1&quot;&gt;&lt;/a&gt;高数笔记-1&lt;/h1&gt;&lt;p&gt;悲剧的是，距离期末考试还有不到一个月的时间&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;第一章：极限与连续&quot;&gt;&lt;a h</summary>
      
    
    
    
    
    <category term="高等数学" scheme="https://mtianming.top/tags/%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>Openmv-1</title>
    <link href="https://mtianming.top/2021/12/12/Openmv-1/"/>
    <id>https://mtianming.top/2021/12/12/Openmv-1/</id>
    <published>2021-12-12T05:11:53.000Z</published>
    <updated>2021-12-12T05:17:29.154Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Openmv-1"><a href="#Openmv-1" class="headerlink" title="Openmv-1"></a>Openmv-1</h1><hr><p><a href="https://book.openmv.cc/quick-starter.html">https://book.openmv.cc/quick-starter.html</a></p><p><a href="https://www.cnblogs.com/Llingfeng/p/14904689.html">https://www.cnblogs.com/Llingfeng/p/14904689.html</a></p><hr>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Openmv-1&quot;&gt;&lt;a href=&quot;#Openmv-1&quot; class=&quot;headerlink&quot; title=&quot;Openmv-1&quot;&gt;&lt;/a&gt;Openmv-1&lt;/h1&gt;&lt;hr&gt;
&lt;p&gt;&lt;a href=&quot;https://book.openmv.cc/quick-sta</summary>
      
    
    
    
    
    <category term="视觉" scheme="https://mtianming.top/tags/%E8%A7%86%E8%A7%89/"/>
    
  </entry>
  
  <entry>
    <title>C-Learning-2</title>
    <link href="https://mtianming.top/2021/12/10/C-Learning-2/"/>
    <id>https://mtianming.top/2021/12/10/C-Learning-2/</id>
    <published>2021-12-10T05:59:26.000Z</published>
    <updated>2021-12-15T01:27:49.618Z</updated>
    
    <content type="html"><![CDATA[<h1 id="指针、数组与字符串"><a href="#指针、数组与字符串" class="headerlink" title="指针、数组与字符串"></a>指针、数组与字符串</h1><p>用数组表示其实是变相地使用指针；字符串是以空字符结尾地char类型数组。</p><hr><h2 id="一、指针"><a href="#一、指针" class="headerlink" title="一、指针"></a>一、指针</h2><blockquote><p><a href="https://blog.csdn.net/soonfly/article/details/51131141">https://blog.csdn.net/soonfly/article/details/51131141</a></p></blockquote><h3 id="1-1了解指针"><a href="#1-1了解指针" class="headerlink" title="1.1了解指针"></a>1.1了解指针</h3><p>1.1.1指针类型</p><p>从语法的角度看，你只要把指针声明语句里的指针名字去掉，剩下的部分就是这个指针的类型。 </p><p>1.1.2指针所指向的类型</p><p>当你通过指针来访问指针所指向的内存区时，指针所指向的类型决定了编译器将把那片内存区里的内容当做什么来看待。</p><p>从语法上看，你只须把指针声明语句中的指针名字和名字左边的指针声明符*去掉，剩下的就是指针所指向的类型。</p><p>（把与指针搅和在一起的”类型”这个概念分成**”指针的类型”和”指针所指向的类型”两个概念**，是精通指针的关键点之一。）</p><p>1.1.3指针的值</p><p>指针的值是XX，就相当于说该指针指向了以XX为首地址的内存区域；</p><p>指针指向了某块内存区域，就相当于说该指针的值是这块内存区域的首地址。</p><p>1.1.4指针的大小：sizeof)(指针类型)</p><h3 id="1-2指针的算术运算"><a href="#1-2指针的算术运算" class="headerlink" title="1.2指针的算术运算"></a>1.2指针的算术运算</h3><p>指针加n减n表示为，p的地址 + n * 指向类型的大小</p><p><code>p + sizeof(type) * n</code></p><p>指针之间可以进行减法运算，但需要保证同一类型；指针之间的加法运算是非法操作，无意义。</p><h3 id="1-3运算符-amp-和"><a href="#1-3运算符-amp-和" class="headerlink" title="1.3运算符&amp;和*"></a>1.3运算符&amp;和*</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> a=<span class="number">12</span>; <span class="keyword">int</span> b; <span class="keyword">int</span> *p; <span class="keyword">int</span> **ptr;</span><br><span class="line">p=&amp;a; </span><br><span class="line">*p=<span class="number">24</span>; </span><br><span class="line">ptr=&amp;p;</span><br><span class="line">*ptr=&amp;b; </span><br><span class="line">**ptr=<span class="number">34</span>; </span><br></pre></td></tr></table></figure><p>（抛掉解释看懂这个）</p><h3 id="1-4指针安全问题"><a href="#1-4指针安全问题" class="headerlink" title="1.4指针安全问题"></a>1.4指针安全问题</h3><p>越界访问会导致其他区域的值被改变，可能导致严重错误（当然安全性高的编译器会报错）</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">char</span> s=<span class="string">&#x27;a&#x27;</span>;</span><br><span class="line"><span class="keyword">int</span> *ptr;</span><br><span class="line">ptr=(<span class="keyword">int</span> *)&amp;s;</span><br><span class="line">*ptr=<span class="number">1298</span>；</span><br><span class="line"><span class="comment">//最后一条语句不但改变了s 所占的一个字节，还把和s 相临的高地址方向的三个字节也改变了。</span></span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">char</span> a;</span><br><span class="line"><span class="keyword">int</span> *ptr=&amp;a;</span><br><span class="line">ptr++;<span class="comment">//指针指向了一个未知的区域</span></span><br><span class="line">*ptr=<span class="number">115</span>;<span class="comment">//还赋了值</span></span><br></pre></td></tr></table></figure><p>在使用指针的时候要注意指针到底指向了哪里。（特别是数组，虽然可能会有报错提示）</p><blockquote><p>在指针的强制类型转换：ptr1=(TYPE *)ptr2 中，如果sizeof(ptr2的类型)大于sizeof(ptr1 的类型)，那么在使用指针ptr1 来访问ptr2所指向的存储区时是安全的。如果sizeof(ptr2 的类型) 小于sizeof(ptr1 的类型)，那么在使用指针ptr1 来访问ptr2 所指向的存储区时是不安全的。</p></blockquote><p><img src="/2021/12/10/C-Learning-2/image-20211215091148078.png" alt="image-20211215091148078"></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">char</span> a = <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line"><span class="keyword">char</span>* p1 = &amp;a;</span><br><span class="line"><span class="keyword">int</span>* p2 = (<span class="keyword">int</span>*)&amp;a;</span><br><span class="line">*p2 = <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c\n&quot;</span>, a);</span><br></pre></td></tr></table></figure><p>（上图及代码表示：sizeof(ptr2的类型)小于sizeof(ptr1 的类型)；会导致栈溢出）</p><hr><h2 id="二、数组"><a href="#二、数组" class="headerlink" title="二、数组"></a>二、数组</h2><h3 id="2-1-数组"><a href="#2-1-数组" class="headerlink" title="2.1 数组"></a>2.1 数组</h3><p>2.1.1 初始化数组</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> arr[<span class="number">5</span>] = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>&#125;;</span><br></pre></td></tr></table></figure><p>有时候需要将数组设置为只读，以保护数组内的数据不会被改变：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> arr[<span class="number">5</span>] = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>&#125;;</span><br></pre></td></tr></table></figure><p>如果部分初始化，其余的值被赋值为0：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> arr[<span class="number">5</span>] = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;arr[3] = %d\n&quot;</span>, arr[<span class="number">3</span>]);</span><br><span class="line"><span class="comment">//打印结果：arr[3] = 0</span></span><br></pre></td></tr></table></figure><p>若初始化时省略方括号内的数字，则编译器会根据数组内的元素个数，自动确定数组大小:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> arr[] = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>&#125;;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;size of arr = %d\n&quot;</span>, <span class="keyword">sizeof</span>(arr));<span class="comment">//sizeof(数组名)得出的是整个数组的大小</span></span><br><span class="line"><span class="comment">//打印结果：size of arr = 20，说明编译器自动赋予了数组五个元素</span></span><br></pre></td></tr></table></figure><blockquote><p>补充：<code>sizeof</code>是C语言中保留关键字，也可以认为是一种运算符，单目运算符。sizeof实际上是获取了数据类型在内存中所占用的存储空间。</p></blockquote><p>2.1.2 指定初始化器</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> arr1[<span class="number">6</span>] = &#123;[<span class="number">5</span>] = <span class="number">1</span>&#125;;<span class="comment">//则最后一个元素被赋值为1</span></span><br><span class="line"><span class="keyword">int</span> arr2[<span class="number">6</span>] = &#123;<span class="number">1</span>, [<span class="number">4</span>] = <span class="number">10</span>, <span class="number">11</span>, [<span class="number">0</span>] = <span class="number">2</span>&#125;;</span><br><span class="line"><span class="comment">//依次赋值为：2、0、0、0、10、11</span></span><br><span class="line"><span class="keyword">int</span> arr3[<span class="number">6</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="comment">//全部赋值为0,只有0可以这样做</span></span><br></pre></td></tr></table></figure><p>2.1.3 边界</p><p>使用越界的数组会导致使用时改变了其他变量的值（有些编译器会直接报错，中断程序）；</p><p>数组的元素编号<strong>从0开始</strong>；</p><p>声明数组的时候使用符号常量表示数组的大小可以增加代码的可读性</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> COLOR_NUM 10</span></span><br><span class="line"><span class="keyword">int</span> arr[COLOR_NUM] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="comment">//使用的时候COLOR_NUM即为数组的最后一个元素</span></span><br></pre></td></tr></table></figure><h3 id="2-2-多维数组"><a href="#2-2-多维数组" class="headerlink" title="2.2 多维数组"></a>2.2 多维数组</h3><p>二维：<code>int arr[2][2]</code></p><p>三维：<code>int arr[2][2][2]</code></p><blockquote><p>注：多维数组只能够省略第一维，即只能写为<code>arr[][num]</code></p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> arr[<span class="number">2</span>][<span class="number">2</span>] =</span><br><span class="line">&#123;</span><br><span class="line">&#123;<span class="number">0</span>,<span class="number">1</span>&#125;;</span><br><span class="line">&#123;<span class="number">2</span>,<span class="number">3</span>&#125;;</span><br><span class="line">&#125;;<span class="comment">//写成这样可以增强可读性</span></span><br><span class="line"><span class="comment">//或者int arr[2][2] = &#123;0, 1, 2, 3&#125;;，即当第一行填满后，会自动跳到第二行继续</span></span><br></pre></td></tr></table></figure><hr><h2 id="三、字符串"><a href="#三、字符串" class="headerlink" title="三、字符串"></a>三、字符串</h2><hr><h2 id="四、指针与数组"><a href="#四、指针与数组" class="headerlink" title="四、指针与数组"></a>四、指针与数组</h2><hr><h2 id="五、指针、数组、函数与字符串"><a href="#五、指针、数组、函数与字符串" class="headerlink" title="五、指针、数组、函数与字符串"></a>五、指针、数组、函数与字符串</h2><hr><p>（未完待续…）</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;指针、数组与字符串&quot;&gt;&lt;a href=&quot;#指针、数组与字符串&quot; class=&quot;headerlink&quot; title=&quot;指针、数组与字符串&quot;&gt;&lt;/a&gt;指针、数组与字符串&lt;/h1&gt;&lt;p&gt;用数组表示其实是变相地使用指针；字符串是以空字符结尾地char类型数组。&lt;/p&gt;
&lt;</summary>
      
    
    
    
    
    <category term="C" scheme="https://mtianming.top/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>打字游戏学习历程2-2</title>
    <link href="https://mtianming.top/2021/12/06/%E6%89%93%E5%AD%97%E6%B8%B8%E6%88%8F%E5%AD%A6%E4%B9%A0%E5%8E%86%E7%A8%8B2-2/"/>
    <id>https://mtianming.top/2021/12/06/%E6%89%93%E5%AD%97%E6%B8%B8%E6%88%8F%E5%AD%A6%E4%B9%A0%E5%8E%86%E7%A8%8B2-2/</id>
    <published>2021-12-06T13:41:44.000Z</published>
    <updated>2021-12-10T05:58:20.334Z</updated>
    
    <content type="html"><![CDATA[<h1 id="逐个步骤学习一下"><a href="#逐个步骤学习一下" class="headerlink" title="逐个步骤学习一下"></a>逐个步骤学习一下</h1><hr><h2 id="1、代码"><a href="#1、代码" class="headerlink" title="1、代码"></a>1、代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;stdio.h&quot;</span></span></span><br><span class="line"><span class="comment">/********************************************************************/</span></span><br><span class="line"><span class="keyword">int</span> left = <span class="number">100</span>, top = <span class="number">20</span>, right = left + <span class="number">250</span>, bottom = top + <span class="number">400</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> c1, c2;</span><br><span class="line"><span class="keyword">int</span> x = <span class="number">-1</span>, y = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">int</span> iScoring = <span class="number">0</span>, iFail = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> gameover = <span class="number">0</span>;</span><br><span class="line"><span class="comment">/********************************************************************/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ShowScoring</span><span class="params">(HDC hdc, <span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> iScoring, <span class="keyword">int</span> iFail)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> szTemp[<span class="number">32</span>];</span><br><span class="line">    <span class="built_in">TextOutA</span>(hdc, x, y, <span class="string">&quot;当前得分：&quot;</span>, <span class="built_in">strlen</span>(<span class="string">&quot;当前得分：&quot;</span>));</span><br><span class="line">    y += <span class="number">20</span>;</span><br><span class="line">    <span class="built_in">sprintf</span>(szTemp, <span class="string">&quot;%d&quot;</span>, iScoring);</span><br><span class="line">    <span class="built_in">TextOutA</span>(hdc, x, y, szTemp, <span class="built_in">strlen</span>(szTemp));</span><br><span class="line">    y += <span class="number">20</span>;</span><br><span class="line">    <span class="built_in">TextOutA</span>(hdc, x, y, <span class="string">&quot;当前失误：&quot;</span>, <span class="built_in">strlen</span>(<span class="string">&quot;当前失误：&quot;</span>));</span><br><span class="line">    y += <span class="number">20</span>;</span><br><span class="line">    <span class="built_in">sprintf</span>(szTemp, <span class="string">&quot;%d&quot;</span>, iFail);</span><br><span class="line">    <span class="built_in">TextOutA</span>(hdc, x, y, szTemp, <span class="built_in">strlen</span>(szTemp));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Fire</span><span class="params">(HDC hdc, <span class="keyword">int</span> x, <span class="keyword">int</span> y1, <span class="keyword">int</span> y2)</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    HPEN hOldPen, hNewPen = <span class="built_in">CreatePen</span>(PS_DASHDOTDOT, <span class="number">1</span>, <span class="built_in">RGB</span>(<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>));</span><br><span class="line">    hOldPen = (HPEN)<span class="built_in">SelectObject</span>(hdc, hNewPen);</span><br><span class="line">    <span class="built_in">MoveToEx</span>(hdc, x, y1, <span class="literal">NULL</span>);</span><br><span class="line">    <span class="built_in">LineTo</span>(hdc, x, y2);</span><br><span class="line">    <span class="built_in">Sleep</span>(<span class="number">100</span>);</span><br><span class="line">    HPEN hNewPen2 = <span class="built_in">CreatePen</span>(PS_SOLID, <span class="number">1</span>, <span class="built_in">RGB</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>));</span><br><span class="line">    <span class="built_in">SelectObject</span>(hdc, hNewPen2);</span><br><span class="line">    <span class="built_in">MoveToEx</span>(hdc, x, y1, <span class="literal">NULL</span>);</span><br><span class="line">    <span class="built_in">LineTo</span>(hdc, x, y2);</span><br><span class="line">    <span class="built_in">SelectObject</span>(hdc, hNewPen);</span><br><span class="line">    <span class="built_in">DeleteObject</span>(hNewPen);</span><br><span class="line">    <span class="built_in">DeleteObject</span>(hNewPen2);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">GameOver</span><span class="params">(HDC hdc, <span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    COLORREF OldColor, NewColor = <span class="built_in">RGB</span>(<span class="built_in">rand</span>() % <span class="number">255</span>, <span class="built_in">rand</span>() % <span class="number">255</span>, <span class="built_in">rand</span>() % <span class="number">255</span>);</span><br><span class="line">    OldColor = <span class="built_in">SetTextColor</span>(hdc, NewColor);</span><br><span class="line">    <span class="built_in">TextOutA</span>(hdc, x, y, <span class="string">&quot;GAME OVER !&quot;</span>, <span class="built_in">strlen</span>(<span class="string">&quot;GAME OVER !&quot;</span>));</span><br><span class="line">    <span class="built_in">SetTextColor</span>(hdc, OldColor);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/********************************************************************/</span></span><br><span class="line"><span class="function">LRESULT CALLBACK <span class="title">WndProc</span><span class="params">(HWND hWnd, UINT message, WPARAM wParam, LPARAM lParam)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in"><span class="keyword">switch</span></span> (message)</span><br><span class="line">    &#123;</span><br><span class="line">            </span><br><span class="line"><span class="comment">/*用户代码开始*/</span></span><br><span class="line">    <span class="keyword">case</span> WM_TIMER:</span><br><span class="line">        <span class="built_in"><span class="keyword">switch</span></span> (wParam) </span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>: </span><br><span class="line">            y += iScoring / <span class="number">10</span> + <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(y &gt; bottom - <span class="number">40</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                gameover = <span class="number">1</span>;</span><br><span class="line">                <span class="built_in">KillTimer</span>(hWnd, <span class="number">1</span>);</span><br><span class="line">                <span class="built_in">SetTimer</span>(hWnd, <span class="number">2</span>, <span class="number">300</span>, <span class="literal">NULL</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">InvalidateRect</span>(hWnd, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            <span class="built_in">InvalidateRect</span>(hWnd, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> WM_CHAR:</span><br><span class="line">    &#123;</span><br><span class="line">        c2 = (wParam &gt;= <span class="string">&#x27;a&#x27;</span> &amp;&amp; wParam &lt;= <span class="string">&#x27;z&#x27;</span>) ? wParam + <span class="string">&#x27;A&#x27;</span> - <span class="string">&#x27;a&#x27;</span> : wParam;</span><br><span class="line">        HDC hdc = <span class="built_in">GetDC</span>(hWnd);</span><br><span class="line">        <span class="built_in">Fire</span>(hdc, left + <span class="number">5</span> + (c2 - <span class="string">&#x27;A&#x27;</span>) * <span class="number">9</span> + <span class="number">4</span>, top, bottom);</span><br><span class="line">        <span class="built_in">ReleaseDC</span>(hWnd, hdc);</span><br><span class="line">        <span class="keyword">if</span> (c2 == c1) </span><br><span class="line">        &#123;</span><br><span class="line">            c1 = <span class="built_in">rand</span>() % <span class="number">26</span> + <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">            x = left + <span class="number">5</span> + (c1 - <span class="string">&#x27;A&#x27;</span>) * <span class="number">9</span>;</span><br><span class="line">            y = top;</span><br><span class="line">            iScoring = iScoring + <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            iFail = iFail + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line"><span class="comment">/*用户代码结束*/</span></span><br><span class="line">            </span><br><span class="line">    <span class="keyword">case</span> WM_COMMAND:</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> wmId = <span class="built_in">LOWORD</span>(wParam);</span><br><span class="line">            <span class="comment">// 分析菜单选择:</span></span><br><span class="line">            </span><br><span class="line"><span class="comment">/*用户代码开始*/</span></span><br><span class="line">            <span class="built_in"><span class="keyword">switch</span></span> (wmId)</span><br><span class="line">            &#123;</span><br><span class="line">            <span class="keyword">case</span> ID_START:</span><br><span class="line">                <span class="keyword">if</span> (gameover == <span class="number">1</span>)</span><br><span class="line">                    <span class="built_in">KillTimer</span>(hWnd, <span class="number">2</span>);</span><br><span class="line">                gameover = <span class="number">0</span>;</span><br><span class="line">                iScoring = <span class="number">0</span>;</span><br><span class="line">                iFail = <span class="number">0</span>;</span><br><span class="line">                c1 = <span class="built_in">rand</span>() % <span class="number">26</span> + <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">                x = left + <span class="number">5</span> + (c1 - <span class="string">&#x27;A&#x27;</span>) * <span class="number">9</span>;</span><br><span class="line">                y = top;</span><br><span class="line">                <span class="built_in">SetTimer</span>(hWnd, <span class="number">1</span>, <span class="number">10</span>, <span class="literal">NULL</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line"><span class="comment">/*用户代码结束*/</span></span><br><span class="line">                    </span><br><span class="line">            <span class="keyword">case</span> IDM_ABOUT:</span><br><span class="line">                <span class="built_in">DialogBox</span>(hInst, <span class="built_in">MAKEINTRESOURCE</span>(IDD_ABOUTBOX), hWnd, About);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> IDM_EXIT:</span><br><span class="line">                <span class="built_in">DestroyWindow</span>(hWnd);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="built_in">DefWindowProc</span>(hWnd, message, wParam, lParam);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> WM_PAINT:</span><br><span class="line">        &#123;</span><br><span class="line">            PAINTSTRUCT ps;</span><br><span class="line">            HDC hdc = <span class="built_in">BeginPaint</span>(hWnd, &amp;ps);</span><br><span class="line">            <span class="comment">// <span class="doctag">TODO:</span> 在此处添加使用 hdc 的任何绘图代码...</span></span><br><span class="line">            </span><br><span class="line"><span class="comment">/*用户代码开始*/</span></span><br><span class="line">            <span class="built_in">DrawBk</span>(hdc, left, top, right, bottom);</span><br><span class="line">            <span class="built_in">ShowScoring</span>(hdc, right + <span class="number">20</span>, top + <span class="number">50</span>, iScoring, iFail);</span><br><span class="line">            <span class="keyword">if</span> (gameover)</span><br><span class="line">                <span class="built_in">GameOver</span>(hdc, left + <span class="number">80</span>, top + <span class="number">130</span>);</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">char</span> szTemp[<span class="number">8</span>];</span><br><span class="line">                <span class="built_in">sprintf</span>(szTemp, <span class="string">&quot;%c&quot;</span>, c1);</span><br><span class="line">                <span class="built_in">TextOutA</span>(hdc, x, y, szTemp, <span class="built_in">strlen</span>(szTemp));</span><br><span class="line">            &#125;</span><br><span class="line"><span class="comment">/*用户代码结束*/</span></span><br><span class="line">            </span><br><span class="line">            <span class="built_in">EndPaint</span>(hWnd, &amp;ps);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> WM_DESTROY:</span><br><span class="line">        <span class="built_in">PostQuitMessage</span>(<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">DefWindowProc</span>(hWnd, message, wParam, lParam);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/********************************************************************/</span></span><br></pre></td></tr></table></figure><p>(整体上添加的代码)</p><hr><h2 id="代码解释"><a href="#代码解释" class="headerlink" title="代码解释"></a>代码解释</h2><h3 id="1"><a href="#1" class="headerlink" title="1."></a>1.</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ShowScoring</span><span class="params">(HDC hdc, <span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> iScoring, <span class="keyword">int</span> iFail)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> szTemp[<span class="number">32</span>];</span><br><span class="line">    <span class="built_in">TextOutA</span>(hdc, x, y, <span class="string">&quot;当前得分：&quot;</span>, <span class="built_in">strlen</span>(<span class="string">&quot;当前得分：&quot;</span>));</span><br><span class="line">    y += <span class="number">20</span>;</span><br><span class="line">    <span class="built_in">sprintf</span>(szTemp, <span class="string">&quot;%d&quot;</span>, iScoring);</span><br><span class="line">    <span class="built_in">TextOutA</span>(hdc, x, y, szTemp, <span class="built_in">strlen</span>(szTemp));</span><br><span class="line">    y += <span class="number">20</span>;</span><br><span class="line">    <span class="built_in">TextOutA</span>(hdc, x, y, <span class="string">&quot;当前失误：&quot;</span>, <span class="built_in">strlen</span>(<span class="string">&quot;当前失误：&quot;</span>));</span><br><span class="line">    y += <span class="number">20</span>;</span><br><span class="line">    <span class="built_in">sprintf</span>(szTemp, <span class="string">&quot;%d&quot;</span>, iFail);</span><br><span class="line">    <span class="built_in">TextOutA</span>(hdc, x, y, szTemp, <span class="built_in">strlen</span>(szTemp));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1）HDC-hdc："><a href="#1）HDC-hdc：" class="headerlink" title="1）HDC hdc："></a>1）HDC hdc：</h3><p>当需要在显示器上（当然包括打印机等设备上）绘图时，或者写文字的时候，需要取得设备的上下文句柄，即HDC。</p><h3 id="2-TextOut函数"><a href="#2-TextOut函数" class="headerlink" title="2) TextOut函数"></a>2) TextOut函数</h3><p><code>BOOL TextOutA(HDC hdc, int x, int y, LPCSTR IpString, int c)；</code></p><p>关于这个函数我们需要了解什么呢？没错，会用就行了。</p><blockquote><p>The <strong>TextOut</strong> function writes a character string at the specified location, using the currently selected font, background color, and text color.</p></blockquote><p>1.TextOut函数使用当前选定的字体、背景颜色和文本颜色<strong>在指定位置</strong>写入字符串。</p><p>2.TextOut函数若后缀为A（TextOutA），则表示普通字符输出，若后缀为W（TextOutW），则表示宽字符输出。</p><p>​    补充：宽字符是什么？</p><blockquote><p>Unicode 是支持所有字符集（包括无法以单个字节表示的字符集）的规范。为国际市场编程时应考虑使用 Unicode 或多字节字符集 (MBCS)，或使程序能够通过更改开关来生成支持两种字符集之一的程序。</p></blockquote><blockquote><p>宽字符是双字节多语言字符代码。在当今的全球计算业内使用的大多数字符（包括技术符号和特殊的发布字符），都可以根据 Unicode 规范表示为宽字符形式。无法以 1 个宽字符表示的字符可以通过 Unicode 的代理项功能以 Unicode 对表示。由于每个宽字符总是以固定的 16 位大小表示，因此<strong>使用宽字符可以简化使用国际字符集进行的编程</strong>。</p></blockquote><blockquote><p>通常，宽字符在内存中占用的空间比多字节字符多，但处理速度更快。另外，在多字节编码中一次只能表示一个区域设置，而世界上的所有字符集都同时以 Unicode 表示形式表示。</p></blockquote><p>3.返回类型：bool（布尔）类型</p><p>bool类型常见于C++（当然如果要在C语言中使用的话，需要导入<code>stdbool.h</code>的头文件），bool类型中，true代表1（即真），false代表0（假）。</p><p>4.一些参数</p><p>x：指定用于字符串对齐的基准点的逻辑x坐标</p><p>y：指定用于字符串对齐的基准点的逻辑y坐标</p><p>LPCSTR IpString：指向要绘制的字符串的指针。字符串不需要以零结尾（不必以0结尾），因为 cchString 指定字符串的长度。</p><p>c：指定字符串的长度。</p><p>5.再来看我们写（chao）的：</p><p>TextOutA(hdc, x, y, “当前得分：”, strlen(“当前得分：”));</p><p>hdc不用管他，一般直接写上去就ok了；x，y表示坐标，即我们要在屏幕这个二维上的哪个地方打印这一字符串；“当前得分：”，为什么IpString明明是，<strong>指向要绘制的字符串的指针</strong>，而我们确实直接输入了一个字符串呢？相信学过C基础的各位，都知道在讲指针与字符串的时候讲过。</p><blockquote><p>注：字符串、数组、指针的内容另写博文</p></blockquote><hr><p>（中途完结。。。由于这部分被建议不用学习，改用的时候移植代码即可）</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;逐个步骤学习一下&quot;&gt;&lt;a href=&quot;#逐个步骤学习一下&quot; class=&quot;headerlink&quot; title=&quot;逐个步骤学习一下&quot;&gt;&lt;/a&gt;逐个步骤学习一下&lt;/h1&gt;&lt;hr&gt;
&lt;h2 id=&quot;1、代码&quot;&gt;&lt;a href=&quot;#1、代码&quot; class=&quot;headerl</summary>
      
    
    
    
    
    <category term="Win 桌面应用程序设计" scheme="https://mtianming.top/tags/Win-%E6%A1%8C%E9%9D%A2%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>TypingGame2-1</title>
    <link href="https://mtianming.top/2021/12/05/TypingGame2-1/"/>
    <id>https://mtianming.top/2021/12/05/TypingGame2-1/</id>
    <published>2021-12-05T04:45:21.000Z</published>
    <updated>2021-12-07T12:50:41.914Z</updated>
    
    <content type="html"><![CDATA[<h1 id="抄写代码"><a href="#抄写代码" class="headerlink" title="抄写代码"></a>抄写代码</h1><p>试着照着书上做了一遍，发现效果还可以，把代码发在这里</p><hr><h2 id="1-设置选项-开始游戏"><a href="#1-设置选项-开始游戏" class="headerlink" title="1.设置选项-开始游戏"></a>1.设置选项-开始游戏</h2><p><img src="/2021/12/05/TypingGame2-1/image-20211205112655148.png" alt="image-20211205112655148"></p><p><img src="/2021/12/05/TypingGame2-1/image-20211205112655148.png" alt="image-20211205112655148"></p><p><img src="/2021/12/05/TypingGame2-1/image-20211205112821015.png" alt="image-20211205112821015"></p><p>输入”开始游戏”</p><p>在杂项-ID中输入”ID_START”</p><p><img src="/2021/12/05/TypingGame2-1/image-20211205112925876.PNG" alt="image-20211205112925876"></p><hr><h2 id="2-复制代码"><a href="#2-复制代码" class="headerlink" title="2.复制代码"></a>2.复制代码</h2><h3 id="1-头文件与预处理器："><a href="#1-头文件与预处理器：" class="headerlink" title="1.头文件与预处理器："></a>1.头文件与预处理器：</h3><p><img src="/2021/12/05/TypingGame2-1/image-20211205113127721.PNG" alt="image-20211205113127721"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;stdio.h&quot;</span></span></span><br></pre></td></tr></table></figure><h3 id="2-全局变量"><a href="#2-全局变量" class="headerlink" title="2.全局变量"></a>2.全局变量</h3><p><img src="/2021/12/05/TypingGame2-1/image-20211205113248719.PNG" alt="image-20211205113248719"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> left = <span class="number">100</span>, top = <span class="number">20</span>, right = left + <span class="number">250</span>, bottom = top + <span class="number">400</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> c1, c2;</span><br><span class="line"><span class="keyword">int</span> x = <span class="number">-1</span>, y = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">int</span> iScoring = <span class="number">0</span>, iFail = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> gameover = <span class="number">0</span>;</span><br></pre></td></tr></table></figure><h3 id="3-一些函数"><a href="#3-一些函数" class="headerlink" title="3.一些函数"></a>3.一些函数</h3><p>将以下函数放在：</p><p><img src="/2021/12/05/TypingGame2-1/image-20211205130728918.png" alt="image-20211205130728918"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DrawBk</span><span class="params">(HDC hdc, <span class="keyword">int</span> x1, <span class="keyword">int</span> y1, <span class="keyword">int</span> x2, <span class="keyword">int</span> y2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">Rectangle</span>(hdc, x1, y1, x2, y2);</span><br><span class="line">    <span class="keyword">char</span> s[<span class="number">100</span>] = <span class="string">&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;</span>;</span><br><span class="line">    <span class="built_in">TextOutA</span>(hdc, x1 + <span class="number">5</span>, y2 - <span class="number">25</span>, s, <span class="built_in">strlen</span>(s));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ShowScoring</span><span class="params">(HDC hdc, <span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> iScoring, <span class="keyword">int</span> iFail)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> szTemp[<span class="number">32</span>];</span><br><span class="line">    <span class="built_in">TextOutA</span>(hdc, x, y, <span class="string">&quot;当前得分：&quot;</span>, <span class="built_in">strlen</span>(<span class="string">&quot;当前得分：&quot;</span>));</span><br><span class="line">    y += <span class="number">20</span>;</span><br><span class="line">    <span class="built_in">sprintf</span>(szTemp, <span class="string">&quot;%d&quot;</span>, iScoring);</span><br><span class="line">    <span class="built_in">TextOutA</span>(hdc, x, y, szTemp, <span class="built_in">strlen</span>(szTemp));</span><br><span class="line">    y += <span class="number">20</span>;</span><br><span class="line">    <span class="built_in">TextOutA</span>(hdc, x, y, <span class="string">&quot;当前失误：&quot;</span>, <span class="built_in">strlen</span>(<span class="string">&quot;当前失误：&quot;</span>));</span><br><span class="line">    y += <span class="number">20</span>;</span><br><span class="line">    <span class="built_in">sprintf</span>(szTemp, <span class="string">&quot;%d&quot;</span>, iFail);</span><br><span class="line">    <span class="built_in">TextOutA</span>(hdc, x, y, szTemp, <span class="built_in">strlen</span>(szTemp));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Fire</span><span class="params">(HDC hdc, <span class="keyword">int</span> x, <span class="keyword">int</span> y1, <span class="keyword">int</span> y2)</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    HPEN hOldPen, hNewPen = <span class="built_in">CreatePen</span>(PS_DASHDOTDOT, <span class="number">1</span>, <span class="built_in">RGB</span>(<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>));</span><br><span class="line">    hOldPen = (HPEN)<span class="built_in">SelectObject</span>(hdc, hNewPen);</span><br><span class="line">    <span class="built_in">MoveToEx</span>(hdc, x, y1, <span class="literal">NULL</span>);</span><br><span class="line">    <span class="built_in">LineTo</span>(hdc, x, y2);</span><br><span class="line">    <span class="built_in">Sleep</span>(<span class="number">100</span>);</span><br><span class="line">    HPEN hNewPen2 = <span class="built_in">CreatePen</span>(PS_SOLID, <span class="number">1</span>, <span class="built_in">RGB</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>));</span><br><span class="line">    <span class="built_in">SelectObject</span>(hdc, hNewPen2);</span><br><span class="line">    <span class="built_in">MoveToEx</span>(hdc, x, y1, <span class="literal">NULL</span>);</span><br><span class="line">    <span class="built_in">LineTo</span>(hdc, x, y2);</span><br><span class="line">    <span class="built_in">SelectObject</span>(hdc, hNewPen);</span><br><span class="line">    <span class="built_in">DeleteObject</span>(hNewPen);</span><br><span class="line">    <span class="built_in">DeleteObject</span>(hNewPen2);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">GameOver</span><span class="params">(HDC hdc, <span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    COLORREF OldColor, NewColor = <span class="built_in">RGB</span>(<span class="built_in">rand</span>() % <span class="number">255</span>, <span class="built_in">rand</span>() % <span class="number">255</span>, <span class="built_in">rand</span>() % <span class="number">255</span>);</span><br><span class="line">    OldColor = <span class="built_in">SetTextColor</span>(hdc, NewColor);</span><br><span class="line">    <span class="built_in">TextOutA</span>(hdc, x, y, <span class="string">&quot;GAME OVER !&quot;</span>, <span class="built_in">strlen</span>(<span class="string">&quot;GAME OVER !&quot;</span>));</span><br><span class="line">    <span class="built_in">SetTextColor</span>(hdc, OldColor);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>（最后找到这个函数，并将其整体用下列代码替换）</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">LRESULT CALLBACK <span class="title">WndProc</span><span class="params">(HWND hWnd, UINT message, WPARAM wParam, LPARAM lParam)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in"><span class="keyword">switch</span></span> (message)</span><br><span class="line">    &#123;</span><br><span class="line">            </span><br><span class="line"><span class="comment">/*用户代码开始*/</span></span><br><span class="line">    <span class="keyword">case</span> WM_TIMER:</span><br><span class="line">        <span class="built_in"><span class="keyword">switch</span></span> (wParam) </span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>: </span><br><span class="line">            y += iScoring / <span class="number">10</span> + <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(y &gt; bottom - <span class="number">40</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                gameover = <span class="number">1</span>;</span><br><span class="line">                <span class="built_in">KillTimer</span>(hWnd, <span class="number">1</span>);</span><br><span class="line">                <span class="built_in">SetTimer</span>(hWnd, <span class="number">2</span>, <span class="number">300</span>, <span class="literal">NULL</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">InvalidateRect</span>(hWnd, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            <span class="built_in">InvalidateRect</span>(hWnd, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> WM_CHAR:</span><br><span class="line">    &#123;</span><br><span class="line">        c2 = (wParam &gt;= <span class="string">&#x27;a&#x27;</span> &amp;&amp; wParam &lt;= <span class="string">&#x27;z&#x27;</span>) ? wParam + <span class="string">&#x27;A&#x27;</span> - <span class="string">&#x27;a&#x27;</span> : wParam;</span><br><span class="line">        HDC hdc = <span class="built_in">GetDC</span>(hWnd);</span><br><span class="line">        <span class="built_in">Fire</span>(hdc, left + <span class="number">5</span> + (c2 - <span class="string">&#x27;A&#x27;</span>) * <span class="number">9</span> + <span class="number">4</span>, top, bottom);</span><br><span class="line">        <span class="built_in">ReleaseDC</span>(hWnd, hdc);</span><br><span class="line">        <span class="keyword">if</span> (c2 == c1) </span><br><span class="line">        &#123;</span><br><span class="line">            c1 = <span class="built_in">rand</span>() % <span class="number">26</span> + <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">            x = left + <span class="number">5</span> + (c1 - <span class="string">&#x27;A&#x27;</span>) * <span class="number">9</span>;</span><br><span class="line">            y = top;</span><br><span class="line">            iScoring = iScoring + <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            iFail = iFail + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line"><span class="comment">/*用户代码结束*/</span></span><br><span class="line">            </span><br><span class="line">    <span class="keyword">case</span> WM_COMMAND:</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> wmId = <span class="built_in">LOWORD</span>(wParam);</span><br><span class="line">            <span class="comment">// 分析菜单选择:</span></span><br><span class="line">            </span><br><span class="line"><span class="comment">/*用户代码开始*/</span></span><br><span class="line">            <span class="built_in"><span class="keyword">switch</span></span> (wmId)</span><br><span class="line">            &#123;</span><br><span class="line">            <span class="keyword">case</span> ID_START:</span><br><span class="line">                <span class="keyword">if</span> (gameover == <span class="number">1</span>)</span><br><span class="line">                    <span class="built_in">KillTimer</span>(hWnd, <span class="number">2</span>);</span><br><span class="line">                gameover = <span class="number">0</span>;</span><br><span class="line">                iScoring = <span class="number">0</span>;</span><br><span class="line">                iFail = <span class="number">0</span>;</span><br><span class="line">                c1 = <span class="built_in">rand</span>() % <span class="number">26</span> + <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">                x = left + <span class="number">5</span> + (c1 - <span class="string">&#x27;A&#x27;</span>) * <span class="number">9</span>;</span><br><span class="line">                y = top;</span><br><span class="line">                <span class="built_in">SetTimer</span>(hWnd, <span class="number">1</span>, <span class="number">10</span>, <span class="literal">NULL</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line"><span class="comment">/*用户代码结束*/</span></span><br><span class="line">                    </span><br><span class="line">            <span class="keyword">case</span> IDM_ABOUT:</span><br><span class="line">                <span class="built_in">DialogBox</span>(hInst, <span class="built_in">MAKEINTRESOURCE</span>(IDD_ABOUTBOX), hWnd, About);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> IDM_EXIT:</span><br><span class="line">                <span class="built_in">DestroyWindow</span>(hWnd);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="built_in">DefWindowProc</span>(hWnd, message, wParam, lParam);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> WM_PAINT:</span><br><span class="line">        &#123;</span><br><span class="line">            PAINTSTRUCT ps;</span><br><span class="line">            HDC hdc = <span class="built_in">BeginPaint</span>(hWnd, &amp;ps);</span><br><span class="line">            <span class="comment">// <span class="doctag">TODO:</span> 在此处添加使用 hdc 的任何绘图代码...</span></span><br><span class="line">            </span><br><span class="line"><span class="comment">/*用户代码开始*/</span></span><br><span class="line">            <span class="built_in">DrawBk</span>(hdc, left, top, right, bottom);</span><br><span class="line">            <span class="built_in">ShowScoring</span>(hdc, right + <span class="number">20</span>, top + <span class="number">50</span>, iScoring, iFail);</span><br><span class="line">            <span class="keyword">if</span> (gameover)</span><br><span class="line">                <span class="built_in">GameOver</span>(hdc, left + <span class="number">80</span>, top + <span class="number">130</span>);</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">char</span> szTemp[<span class="number">8</span>];</span><br><span class="line">                <span class="built_in">sprintf</span>(szTemp, <span class="string">&quot;%c&quot;</span>, c1);</span><br><span class="line">                <span class="built_in">TextOutA</span>(hdc, x, y, szTemp, <span class="built_in">strlen</span>(szTemp));</span><br><span class="line">            &#125;</span><br><span class="line"><span class="comment">/*用户代码结束*/</span></span><br><span class="line">            </span><br><span class="line">            <span class="built_in">EndPaint</span>(hWnd, &amp;ps);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> WM_DESTROY:</span><br><span class="line">        <span class="built_in">PostQuitMessage</span>(<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">DefWindowProc</span>(hWnd, message, wParam, lParam);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p>于是乎，当你Copy完以上代码后你就能获得一个桌面小游戏w</p><p><img src="/2021/12/05/TypingGame2-1/image-20211207204857524.png" alt="image-20211207204857524"></p><hr><p>（未完待续…）</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;抄写代码&quot;&gt;&lt;a href=&quot;#抄写代码&quot; class=&quot;headerlink&quot; title=&quot;抄写代码&quot;&gt;&lt;/a&gt;抄写代码&lt;/h1&gt;&lt;p&gt;试着照着书上做了一遍，发现效果还可以，把代码发在这里&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;1-设置选项-开始游戏&quot;&gt;&lt;a hr</summary>
      
    
    
    
    
    <category term="Win 桌面应用程序设计" scheme="https://mtianming.top/tags/Win-%E6%A1%8C%E9%9D%A2%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>打字游戏学习历程1.1</title>
    <link href="https://mtianming.top/2021/12/04/%E6%89%93%E5%AD%97%E6%B8%B8%E6%88%8F%E5%AD%A6%E4%B9%A0%E5%8E%86%E7%A8%8B1-1/"/>
    <id>https://mtianming.top/2021/12/04/%E6%89%93%E5%AD%97%E6%B8%B8%E6%88%8F%E5%AD%A6%E4%B9%A0%E5%8E%86%E7%A8%8B1-1/</id>
    <published>2021-12-04T13:54:42.000Z</published>
    <updated>2021-12-05T03:23:12.103Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Windows-API"><a href="#Windows-API" class="headerlink" title="Windows API"></a>Windows API</h1><p>API（Application Programming Interface）</p><hr><h2 id="1-Start"><a href="#1-Start" class="headerlink" title="1.Start"></a>1.Start</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;iostream&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;Windows.h&quot;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">WinMain</span><span class="params">(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPSTR lpCmdLine, <span class="keyword">int</span> nCmdShow)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Hallo C++ !&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">MessageBox</span>(<span class="literal">NULL</span>, <span class="built_in">TEXT</span>(<span class="string">&quot;Hallo C++ !&quot;</span>), <span class="built_in">TEXT</span>(<span class="string">&quot;标题&quot;</span>), MB_OK);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;\\（第一个API函数）</span><br></pre></td></tr></table></figure><p>用<code>WinMain()</code>代替<code>main()</code>更能体现我们准备做的程序是一个Windows程序</p><hr><h2 id="2-API函数分类"><a href="#2-API函数分类" class="headerlink" title="2.API函数分类"></a>2.API函数分类</h2><p>Windows API包括几千个可调用的函数，它们大致可以分为以下几个大类：</p><p>基本服务；</p><p>组件服务;</p><p>用户界面服务；</p><p>图形多媒体服务;</p><p>消息和协作；</p><p>网络；</p><p>Web服务。</p><p><strong>Windows API所提供的七类功能详细介绍：</strong></p><p><strong>1.基础服务（Base Services）</strong></p><p> 提供对Windows系统可用的基础资源的访问接口。比如象：文件系统（file system）、外部设备（device）、，进程（process）、线程（thread）以及访问注册表（Windows registry）和错误处理机制（error handling）。</p><p><strong>2.图形设备接口（GDI）</strong></p><p> 提供功能为：输出图形内容到显示器、打印机以及其他外部输出设备。</p><p><strong>3.图形化用户界面（GUI）</strong></p><p> 提供的功能有创建和管理屏幕和大多数基本控件（control），比如按钮和滚动条。接收鼠标和键盘输入，以及其他与GUI有关的功能。</p><p><strong>4.通用对话框链接库（Common Dialog Box Library）</strong></p><p> 为应用程序提供标准对话框，比如打开/保存文档对话框、颜色对话框和字体对话框等等。</p><p><strong>5.通用控件链接库（Common Control Library）</strong></p><p> 为应用程序提供接口来访问操作系统提供的一些高级控件。比如像：状态栏（status bar）、进度条（progress bars）、工具栏（toolbar）和标签（tab）。</p><p><strong>6.Windows外壳（Windows Shell）</strong></p><p> 作为Windows API的组成部分，不仅允许应用程序访问Windows外壳提供的功能，还对之有所改进和增强。</p><p><strong>7.网络服务（Network Services）</strong></p><p> 为访问操作系统提供的多种网络 功能提供接口。它包括NetBIOS、Winsock、NetDDE及RPC等。</p><hr><h2 id="3-程序入口函数WinMain"><a href="#3-程序入口函数WinMain" class="headerlink" title="3.程序入口函数WinMain()"></a>3.程序入口函数<code>WinMain()</code></h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;iostream&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;Windows.h&quot;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">WinMain</span><span class="params">(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPSTR lpCmdLine, <span class="keyword">int</span> nCmdShow)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Hallo C++ !&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">MessageBox</span>(<span class="literal">NULL</span>, <span class="built_in">TEXT</span>(<span class="string">&quot;Hallo C++ !&quot;</span>), <span class="built_in">TEXT</span>(<span class="string">&quot;标题&quot;</span>), MB_OK);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>WinMain 函数有 4 个参数：hInstance、hPrevInstance、lp CmdLine、nCmdShOW。</p><ul><li>第一个参数是 hInstance，数据类型是HINSTANCE，此参数表示应用程序本次运行实例的句柄。</li><li>第二个参数是 hPrevInstance，数据类型也是 HINSTANCE，表示应用程序之前运行的句柄，但是在实际应用中，此参数始终为 NULL。</li><li>第三个参数 lpCmdLine 是运行时参数。如在 cmd命令行中运行“start.ext Command Arguments”，那么lpCmdLine就指向字符串“Command Arguments”，作用与C语言中main函数的参数作用类似。数据类型LPSTR是Windows API常见的字符串类型。</li><li>最后一个参数是 nCmdShow，数据类型是int，表示应用程序窗口（如果有）的显示状态。WinMain 函数的返回类型是 int 型的。</li></ul><hr><p>（未完待续…）</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Windows-API&quot;&gt;&lt;a href=&quot;#Windows-API&quot; class=&quot;headerlink&quot; title=&quot;Windows API&quot;&gt;&lt;/a&gt;Windows API&lt;/h1&gt;&lt;p&gt;API（Application Programming Interf</summary>
      
    
    
    
    
    <category term="Win 桌面应用程序设计" scheme="https://mtianming.top/tags/Win-%E6%A1%8C%E9%9D%A2%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>C_Learning_1_1</title>
    <link href="https://mtianming.top/2021/12/01/C-Learning-1/"/>
    <id>https://mtianming.top/2021/12/01/C-Learning-1/</id>
    <published>2021-12-01T05:05:17.000Z</published>
    <updated>2021-12-01T13:14:23.361Z</updated>
    
    <content type="html"><![CDATA[<h1 id="C-Learning-1-1"><a href="#C-Learning-1-1" class="headerlink" title="C_Learning_1_1"></a>C_Learning_1_1</h1><hr><p>（<del>预告：本文是融合怪</del>）</p><h2 id="使用C语言的7个步骤"><a href="#使用C语言的7个步骤" class="headerlink" title="使用C语言的7个步骤"></a>使用C语言的7个步骤</h2><p>1.定义程序的目标</p><p>2.设计程序</p><p>3.编写代码</p><p>4.编译</p><p>5.运行程序</p><p>6.测试和调试程序</p><p>7.维护和修改程序</p><hr><h2 id="提高程序的可读性"><a href="#提高程序的可读性" class="headerlink" title="提高程序的可读性"></a>提高程序的可读性</h2><h3 id="1-一致的缩进"><a href="#1-一致的缩进" class="headerlink" title="1.一致的缩进"></a>1.一致的缩进</h3><p>代码缩进方式是有挺多中的，一致的缩进可以为查看代码，检查代码提供很大的便利</p><p>例：</p><p>我们来对比一下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(Read_C1==<span class="number">0</span>)&#123;</span><br><span class="line">    HAL_Delay(<span class="number">10</span>);</span><br><span class="line">    <span class="keyword">if</span>(Read_C1==<span class="number">0</span>)</span><br><span class="line">    HAL_TIM_PWM_Start(&amp;htim4,TIM_CHANNEL_2);</span><br><span class="line">    __HAL_TIM_SET_AUTORELOAD(&amp;htim4,<span class="number">2000</span>);</span><br><span class="line">    __HAL_TIM_SET_COMPARE(&amp;htim4,TIM_CHANNEL_2,<span class="number">1000</span>);</span><br><span class="line">    HAL_Delay(<span class="number">100</span>);</span><br><span class="line">    __HAL_TIM_SET_COMPARE(&amp;htim4,TIM_CHANNEL_2,<span class="number">0</span>);</span><br><span class="line">    motor_adjust();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(Read_C1==<span class="number">0</span>)&#123;</span><br><span class="line">    HAL_Delay(<span class="number">10</span>);</span><br><span class="line">    <span class="keyword">if</span>(Read_C1==<span class="number">0</span>)</span><br><span class="line">    HAL_TIM_PWM_Start(&amp;htim4,TIM_CHANNEL_2);</span><br><span class="line">    __HAL_TIM_SET_AUTORELOAD(&amp;htim4,<span class="number">2000</span>);</span><br><span class="line">    __HAL_TIM_SET_COMPARE(&amp;htim4,TIM_CHANNEL_2,<span class="number">1000</span>);</span><br><span class="line">    HAL_Delay(<span class="number">100</span>);</span><br><span class="line">    __HAL_TIM_SET_COMPARE(&amp;htim4,TIM_CHANNEL_2,<span class="number">0</span>);</span><br><span class="line">    motor_adjust();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在这个例子中你会发现，有两个if，而第二个if那里你会发现有一个没有缩进，这就给我们读代码的时候带来了挺大的困扰（即便是本人写的，有时也会觉得很烦）</p><p>这里只出现了一次，若是很多嵌套你给我整个乱缩进，我可能会<del>带着想敲人的心情</del>先把他整理好再看的</p><h3 id="2-避免冗余的注释"><a href="#2-避免冗余的注释" class="headerlink" title="2.避免冗余的注释"></a>2.避免冗余的注释</h3><p>注释是一件很棒的，可以很有效的提高代码的可读性（比如说你的某个小伙伴看不懂你没有注释的代码，就会来<del>烦</del>打扰你，就会导致一个团队的工作效率降低）</p><p>but要适当的注释，精炼注释，否则你的小伙伴看到你一条注释一条代码的程序也会觉得很烦</p><p>（一句话能说明白的，咱就不要说得那么冗长）</p><h3 id="3-代码分组"><a href="#3-代码分组" class="headerlink" title="3.代码分组"></a>3.代码分组</h3><p>同一类凑在一起会好看些。</p><p>通过注释、空行等方法。（简洁明了）</p><h3 id="4-命名方案"><a href="#4-命名方案" class="headerlink" title="4.命名方案"></a>4.命名方案</h3><p>1.对于临时变量，我们可以将它们一致命名为<code>i</code>（或者其他单一字母</p><h6 id="2-对于一些有意义的量，我们可以给他们命个名，就比如说计数器，我们可以命名为cnt而不是i，这样好让读代码的人可以知道你这个变量是干啥的，而不是i-j-k-a-b-c如果单片机里的引脚都这样命名，你可能会想给他寄刀片好吃的。"><a href="#2-对于一些有意义的量，我们可以给他们命个名，就比如说计数器，我们可以命名为cnt而不是i，这样好让读代码的人可以知道你这个变量是干啥的，而不是i-j-k-a-b-c如果单片机里的引脚都这样命名，你可能会想给他寄刀片好吃的。" class="headerlink" title="2.对于一些有意义的量，我们可以给他们命个名，就比如说计数器，我们可以命名为cnt而不是i，这样好让读代码的人可以知道你这个变量是干啥的，而不是i,j,k,a,b,c如果单片机里的引脚都这样命名，你可能会想给他寄刀片好吃的。"></a>2.对于一些有意义的量，我们可以给他们命个名，就比如说计数器，我们可以命名为<code>cnt</code>而不是<code>i</code>，这样好让读代码的人可以知道你这个变量是干啥的，而不是<code>i,j,k,a,b,c</code>如果单片机里的引脚都这样命名，你可能会想给他寄<del>刀片</del>好吃的。</h6><p>3.最后，对于量的命名，我们需要统一用一种命名方式，当然，有挺多的其实，我个人比较喜欢用下划线（key_play 表示用矩阵键盘来弹电子琴；key_scan表示对矩阵键盘进行扫描）</p><h3 id="5-DRY-Principle（干燥原理）"><a href="#5-DRY-Principle（干燥原理）" class="headerlink" title="5.DRY Principle（干燥原理）"></a>5.DRY Principle（干燥原理）</h3><p>Ctrl + C，Ctrl + V作为当代大学生最常用地快捷键，在代码中确实要慎用地</p><blockquote><p><em>DRY意思是不要重复，即DIE: Duplication is Evil.（复制是邪恶的）</em></p></blockquote><p>复制粘贴会让你的代码变得十分冗杂</p><p>一段代码实现的功能应当是它独有的，我们往往能够找到合适的办法，将一大段复制型代码转化为一小段（当然并不是说代码越渐短越高效）</p><blockquote><p><em>“每一条知识都必须在一个系统中有一个单一的、明确的、权威的表示。”</em></p></blockquote><p>遵守以上原则，我们能够大大缩短代码冗杂都度</p><p>（最后分享一个离谱的案例：有人用if语句叠了几万行代码）</p><h3 id="6-避免太多嵌套"><a href="#6-避免太多嵌套" class="headerlink" title="6.避免太多嵌套"></a>6.避免太多嵌套</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>（a）</span><br><span class="line"><span class="keyword">if</span>（b）</span><br><span class="line"><span class="keyword">if</span>（c）</span><br><span class="line"><span class="keyword">if</span>（d）</span><br><span class="line"><span class="keyword">if</span>（e）</span><br><span class="line">........</span><br></pre></td></tr></table></figure><p>这还只是if，太多嵌套的话会导致你很难跟踪调试</p><p>（你知道的，C语言考试题里面经常来这种嵌套，还只是三层就已经够恶心人的了）</p><h3 id="7-限制行的长度"><a href="#7-限制行的长度" class="headerlink" title="7.限制行的长度"></a>7.限制行的长度</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">printf(&quot;The China-Laos Railway, due to open this week, is a docking project between the China-proposed Belt and Road Initiative and Laos&#x27; strategy to convert itself from a landlocked country to a land-linked hub. It will bring new opportunities and provide huge momentum in strengthening Laos&#x27; economy. The train route will connect the Chinese city of Kunming to the Lao capital Vientiane, with grand plans for high-speed rail to ultimately snake down through Thailand and Malaysia to Singapore.&quot;);</span><br></pre></td></tr></table></figure><p>如果放在编译器里的话就是天灾，而且这对眼睛不好，最好还是不要超过80吧qwq</p><p>小补充：</p><p>这里就有三种方式可以应对这种超长代码：</p><p>1.使用多个<code>printf()</code></p><p>2.用反斜杠<code>\</code></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;The China-Laos Railway, due to open this week, \</span></span><br><span class="line"><span class="string">is a docking project between the China-proposed Belt and \</span></span><br><span class="line"><span class="string">Road Initiative and Laos&#x27; strategy to convert itself from \</span></span><br><span class="line"><span class="string">a landlocked country to a land-linked hub.\n&quot;</span>);</span><br></pre></td></tr></table></figure><p>3.用ANSI C引入的字符串<code>&#39; &#39;</code>连接</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;hallo&quot;</span> <span class="string">&quot;i&quot;</span> <span class="string">&quot;am&quot;</span></span><br><span class="line">      <span class="string">&quot;a boy&quot;</span>);<span class="comment">//即&quot; &quot;</span></span><br></pre></td></tr></table></figure><h3 id="8-用多个文件来实现一个工程"><a href="#8-用多个文件来实现一个工程" class="headerlink" title="8.用多个文件来实现一个工程"></a>8.用多个文件来实现一个工程</h3><p>从理论上来讲，你可以把所有项目写在一个源文件中，但。。你维护的时候或者别人读的时候，绝对是噩梦般的体验</p><p>这个是后话，先知道就好了（<del>其实晚自习要下课了</del>）</p><hr><p>（未完待续..）</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;C-Learning-1-1&quot;&gt;&lt;a href=&quot;#C-Learning-1-1&quot; class=&quot;headerlink&quot; title=&quot;C_Learning_1_1&quot;&gt;&lt;/a&gt;C_Learning_1_1&lt;/h1&gt;&lt;hr&gt;
&lt;p&gt;（&lt;del&gt;预告：本文是融合怪&lt;/</summary>
      
    
    
    
    
    <category term="C" scheme="https://mtianming.top/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>我的第一篇博文</title>
    <link href="https://mtianming.top/2021/11/30/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E6%96%87/"/>
    <id>https://mtianming.top/2021/11/30/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E6%96%87/</id>
    <published>2021-11-30T10:36:59.000Z</published>
    <updated>2021-12-01T07:34:26.324Z</updated>
    
    <content type="html"><![CDATA[<h1 id="My-First-Blog"><a href="#My-First-Blog" class="headerlink" title="My First Blog"></a>My First Blog</h1><p>这里是我的第一篇博文</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;My-First-Blog&quot;&gt;&lt;a href=&quot;#My-First-Blog&quot; class=&quot;headerlink&quot; title=&quot;My First Blog&quot;&gt;&lt;/a&gt;My First Blog&lt;/h1&gt;&lt;p&gt;这里是我的第一篇博文&lt;/p&gt;
</summary>
      
    
    
    
    
    <category term="hexo" scheme="https://mtianming.top/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://mtianming.top/2021/11/30/hello-world/"/>
    <id>https://mtianming.top/2021/11/30/hello-world/</id>
    <published>2021-11-30T09:58:43.544Z</published>
    <updated>2021-11-30T09:58:43.544Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
